

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Feb 16 12:09:14 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataCOMRAM
    39  00191E                     __pidataCOMRAM:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _position
    43  00191E  01                 	db	1
    44                           
    45                           ;initializer for _tone_pins
    46  00191F  FF                 	db	255
    47                           
    48                           	psect	idataBANK0
    49  001916                     __pidataBANK0:
    50                           	opt stack 0
    51                           
    52                           ;initializer for lcd_setCursor@F5717
    53  001916  0000               	dw	0
    54  001918  0040               	dw	64
    55  00191A  0014               	dw	20
    56  00191C  0054               	dw	84
    57                           
    58                           	psect	smallconst
    59  001200                     __psmallconst:
    60                           	opt stack 0
    61  001200  00                 	db	0
    62  001201                     _table:
    63                           	opt stack 0
    64  001201  4B00               	dw	19200
    65  001203  0000               	dw	0
    66  001205  001F               	dw	31
    67  001207  003F               	dw	63
    68  001209  003F               	dw	63
    69  00120B  0034               	dw	52
    70  00120D  2580               	dw	9600
    71  00120F  0000               	dw	0
    72  001211  0042               	dw	66
    73  001213  0085               	dw	133
    74  001215  0085               	dw	133
    75  001217  006E               	dw	110
    76  001219  12C0               	dw	4800
    77  00121B  0000               	dw	0
    78  00121D  0087               	dw	135
    79  00121F  010F               	dw	271
    80  001221  010F               	dw	271
    81  001223  00DF               	dw	223
    82  001225  0960               	dw	2400
    83  001227  0000               	dw	0
    84  001229  0113               	dw	275
    85  00122B  0225               	dw	549
    86  00122D  0225               	dw	549
    87  00122F  01C2               	dw	450
    88  001231  04B0               	dw	1200
    89  001233  0000               	dw	0
    90  001235  0228               	dw	552
    91  001237  0450               	dw	1104
    92  001239  0450               	dw	1104
    93  00123B  0389               	dw	905
    94  00123D                     __end_of_table:
    95                           	opt stack 0
    96  00123D                     _digitalPinToBitMask:
    97                           	opt stack 0
    98  00123D  80                 	db	128
    99  00123E  40                 	db	64
   100  00123F  04                 	db	4
   101  001240  08                 	db	8
   102  001241  01                 	db	1
   103  001242  04                 	db	4
   104  001243  02                 	db	2
   105  001244  02                 	db	2
   106  001245  04                 	db	4
   107  001246  08                 	db	8
   108  001247  10                 	db	16
   109  001248  20                 	db	32
   110  001249  40                 	db	64
   111  00124A  80                 	db	128
   112  00124B  08                 	db	8
   113  00124C  01                 	db	1
   114  00124D  02                 	db	2
   115  00124E  01                 	db	1
   116  00124F  02                 	db	2
   117  001250  04                 	db	4
   118  001251  20                 	db	32
   119  001252  01                 	db	1
   120  001253  02                 	db	2
   121  001254  01                 	db	1
   122  001255  10                 	db	16
   123  001256  40                 	db	64
   124  001257  80                 	db	128
   125  001258                     __end_of_digitalPinToBitMask:
   126                           	opt stack 0
   127  001258                     _digitalPinToPort:
   128                           	opt stack 0
   129  001258  03                 	db	3
   130  001259  03                 	db	3
   131  00125A  02                 	db	2
   132  00125B  02                 	db	2
   133  00125C  04                 	db	4
   134  00125D  03                 	db	3
   135  00125E  03                 	db	3
   136  00125F  04                 	db	4
   137  001260  04                 	db	4
   138  001261  04                 	db	4
   139  001262  04                 	db	4
   140  001263  04                 	db	4
   141  001264  04                 	db	4
   142  001265  04                 	db	4
   143  001266  01                 	db	1
   144  001267  02                 	db	2
   145  001268  02                 	db	2
   146  001269  01                 	db	1
   147  00126A  01                 	db	1
   148  00126B  01                 	db	1
   149  00126C  01                 	db	1
   150  00126D  05                 	db	5
   151  00126E  05                 	db	5
   152  00126F  03                 	db	3
   153  001270  01                 	db	1
   154  001271  02                 	db	2
   155  001272  02                 	db	2
   156  001273                     __end_of_digitalPinToPort:
   157                           	opt stack 0
   158  001273                     _digitalPinToTimer:
   159                           	opt stack 0
   160  001273  00                 	db	0
   161  001274  00                 	db	0
   162  001275  00                 	db	0
   163  001276  00                 	db	0
   164  001277  00                 	db	0
   165  001278  01                 	db	1
   166  001279  02                 	db	2
   167  00127A  00                 	db	0
   168  00127B  00                 	db	0
   169  00127C  00                 	db	0
   170  00127D  00                 	db	0
   171  00127E  00                 	db	0
   172  00127F  00                 	db	0
   173  001280  00                 	db	0
   174  001281  00                 	db	0
   175  001282  00                 	db	0
   176  001283  00                 	db	0
   177  001284  00                 	db	0
   178  001285  00                 	db	0
   179  001286  00                 	db	0
   180  001287  00                 	db	0
   181  001288  00                 	db	0
   182  001289  00                 	db	0
   183  00128A  00                 	db	0
   184  00128B  00                 	db	0
   185  00128C  00                 	db	0
   186  00128D  00                 	db	0
   187  00128E                     __end_of_digitalPinToTimer:
   188                           	opt stack 0
   189  00128E                     _portInputRegister:
   190                           	opt stack 0
   191  00128E  0000               	dw	0
   192  001290  0F80               	dw	3968	;volatile
   193  001292  0F81               	dw	3969	;volatile
   194  001294  0F82               	dw	3970	;volatile
   195  001296  0F83               	dw	3971	;volatile
   196  001298  0F84               	dw	3972	;volatile
   197  00129A                     __end_of_portInputRegister:
   198                           	opt stack 0
   199  00129A                     _portModeRegister:
   200                           	opt stack 0
   201  00129A  0000               	dw	0
   202  00129C  0F92               	dw	3986	;volatile
   203  00129E  0F93               	dw	3987	;volatile
   204  0012A0  0F94               	dw	3988	;volatile
   205  0012A2  0F95               	dw	3989	;volatile
   206  0012A4  0F96               	dw	3990	;volatile
   207  0012A6                     __end_of_portModeRegister:
   208                           	opt stack 0
   209  0012A6                     _portOutputRegister:
   210                           	opt stack 0
   211  0012A6  0000               	dw	0
   212  0012A8  0F89               	dw	3977	;volatile
   213  0012AA  0F8A               	dw	3978	;volatile
   214  0012AC  0F8B               	dw	3979	;volatile
   215  0012AE  0F8C               	dw	3980	;volatile
   216  0012B0  0F8D               	dw	3981	;volatile
   217  0012B2                     __end_of_portOutputRegister:
   218                           	opt stack 0
   219  0012B2                     _analogPinToChannel:
   220                           	opt stack 0
   221  0012B2  00                 	db	0
   222  0012B3  01                 	db	1
   223  0012B4  02                 	db	2
   224  0012B5  04                 	db	4
   225  0012B6  05                 	db	5
   226  0012B7  06                 	db	6
   227  0012B8                     __end_of_analogPinToChannel:
   228                           	opt stack 0
   229  0012B8                     _XMIT_START_ADJUSTMENT:
   230                           	opt stack 0
   231  0012B8  0000               	dw	0
   232  0012BA                     __end_of_XMIT_START_ADJUSTMENT:
   233                           	opt stack 0
   234  0012BA                     _tonePinToTimer:
   235                           	opt stack 0
   236  0012BA  01                 	db	1
   237  0012BB                     __end_of_tonePinToTimer:
   238                           	opt stack 0
   239  0000                     _TMR1	set	4046
   240  0000                     _ADCON0	set	4034
   241  0000                     _ADCON0bits	set	4034
   242  0000                     _ADCON1	set	4033
   243  0000                     _ADCON1bits	set	4033
   244  0000                     _ADCON2	set	4032
   245  0000                     _ADRESH	set	4036
   246  0000                     _ADRESL	set	4035
   247  0000                     _CCP1CONbits	set	4029
   248  0000                     _CCP2CONbits	set	4026
   249  0000                     _CCPR1L	set	4030
   250  0000                     _CCPR2L	set	4027
   251  0000                     _INTCONbits	set	4082
   252  0000                     _PR2	set	4043
   253  0000                     _RCREG	set	4014
   254  0000                     _SPBRG	set	4015
   255  0000                     _SPBRGH	set	4016
   256  0000                     _T0CON	set	4053
   257  0000                     _T1CON	set	4045
   258  0000                     _T2CON	set	4042
   259  0000                     _TMR0L	set	4054
   260  0000                     _TXREG	set	4013
   261  0000                     _ADON	set	32272
   262  0000                     _BRG16	set	32195
   263  0000                     _BRGH	set	32098
   264  0000                     _CREN	set	32092
   265  0000                     _GIE	set	32663
   266  0000                     _GO	set	32273
   267  0000                     _INT0IE	set	32660
   268  0000                     _INT0IF	set	32657
   269  0000                     _INT1IE	set	32643
   270  0000                     _INT1IF	set	32640
   271  0000                     _INT1IP	set	32646
   272  0000                     _INT2IE	set	32644
   273  0000                     _INT2IF	set	32641
   274  0000                     _INT2IP	set	32647
   275  0000                     _INTEDG0	set	32654
   276  0000                     _INTEDG1	set	32653
   277  0000                     _INTEDG2	set	32652
   278  0000                     _IPEN	set	32391
   279  0000                     _PEIE	set	32662
   280  0000                     _RBPU	set	32655
   281  0000                     _RCIE	set	31981
   282  0000                     _RCIF	set	31989
   283  0000                     _RCIP	set	31997
   284  0000                     _SPEN	set	32095
   285  0000                     _SYNC	set	32100
   286  0000                     _TMR0IE	set	32661
   287  0000                     _TMR0IF	set	32658
   288  0000                     _TMR0IP	set	32650
   289  0000                     _TMR1IE	set	31976
   290  0000                     _TMR1IF	set	31984
   291  0000                     _TMR1IP	set	31992
   292  0000                     _TMR1ON	set	32360
   293  0000                     _TRISA4	set	31892
   294  0000                     _TRISC6	set	31910
   295  0000                     _TRISC7	set	31911
   296  0000                     _TRMT	set	32097
   297  0000                     _TX9	set	32102
   298  0000                     _TXEN	set	32101
   299  0000                     _TXIE	set	31980
   300  0000                     _TXIF	set	31988
   301  0000                     _TXIP	set	31996
   302  0000                     _LATA	set	3977
   303  0000                     _LATB	set	3978
   304  0000                     _LATC	set	3979
   305  0000                     _LATD	set	3980
   306  0000                     _LATE	set	3981
   307  0000                     _PORTA	set	3968
   308  0000                     _PORTB	set	3969
   309  0000                     _PORTC	set	3970
   310  0000                     _PORTD	set	3971
   311  0000                     _PORTE	set	3972
   312  0000                     _TRISA	set	3986
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISC	set	3988
   315  0000                     _TRISD	set	3989
   316  0000                     _TRISE	set	3990
   317  0012BB                     __stringdata:
   318                           	opt stack 0
   319  0012BB                     STR_1:
   320  0012BB  6F                 	db	111	;'o'
   321  0012BC  76                 	db	118	;'v'
   322  0012BD  66                 	db	102	;'f'
   323  0012BE  00                 	db	0
   324  0012BF                     __end_of__stringdata:
   325                           	opt stack 0
   326  0012BF  00                 	db	0	; dummy byte at the end
   327  0000                     
   328                           ; #config settings
   329                           
   330                           	psect	cinit
   331  001712                     __pcinit:
   332                           	opt stack 0
   333  001712                     start_initialization:
   334                           	opt stack 0
   335  001712                     __initialization:
   336                           	opt stack 0
   337                           
   338                           ; Clear objects allocated to BANK1 (132 bytes)
   339  001712  EE01  F000         	lfsr	0,__pbssBANK1
   340  001716  0E84               	movlw	132
   341  001718                     clear_0:
   342  001718  6AEE               	clrf	postinc0,c
   343  00171A  06E8               	decf	wreg,f,c
   344  00171C  E1FD               	bnz	clear_0
   345                           
   346                           ; Clear objects allocated to BANK0 (120 bytes)
   347  00171E  EE00  F060         	lfsr	0,__pbssBANK0
   348  001722  0E78               	movlw	120
   349  001724                     clear_1:
   350  001724  6AEE               	clrf	postinc0,c
   351  001726  06E8               	decf	wreg,f,c
   352  001728  E1FD               	bnz	clear_1
   353                           
   354                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   355  00172A  6A49               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   356                           
   357                           ; Clear objects allocated to COMRAM (42 bytes)
   358  00172C  EE00  F001         	lfsr	0,__pbssCOMRAM
   359  001730  0E2A               	movlw	42
   360  001732                     clear_2:
   361  001732  6AEE               	clrf	postinc0,c
   362  001734  06E8               	decf	wreg,f,c
   363  001736  E1FD               	bnz	clear_2
   364                           
   365                           ; Initialize objects allocated to BANK0 (8 bytes)
   366                           ; load TBLPTR registers with __pidataBANK0
   367  001738  0E16               	movlw	low __pidataBANK0
   368  00173A  6EF6               	movwf	tblptrl,c
   369  00173C  0E19               	movlw	high __pidataBANK0
   370  00173E  6EF7               	movwf	tblptrh,c
   371  001740  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   372  001742  6EF8               	movwf	tblptru,c
   373  001744  EE00  F0F1         	lfsr	0,__pdataBANK0
   374  001748  EE10 F008          	lfsr	1,8
   375  00174C                     copy_data0:
   376  00174C  0009               	tblrd		*+
   377  00174E  CFF5 FFEE          	movff	tablat,postinc0
   378  001752  50E5               	movf	postdec1,w,c
   379  001754  50E1               	movf	fsr1l,w,c
   380  001756  E1FA               	bnz	copy_data0
   381                           
   382                           ; Initialize objects allocated to COMRAM (2 bytes)
   383                           ; load TBLPTR registers with __pidataCOMRAM
   384  001758  0E1E               	movlw	low __pidataCOMRAM
   385  00175A  6EF6               	movwf	tblptrl,c
   386  00175C  0E19               	movlw	high __pidataCOMRAM
   387  00175E  6EF7               	movwf	tblptrh,c
   388  001760  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   389  001762  6EF8               	movwf	tblptru,c
   390  001764  0009               	tblrd		*+	;fetch initializer
   391  001766  CFF5 F047          	movff	tablat,__pdataCOMRAM
   392  00176A  0009               	tblrd		*+	;fetch initializer
   393  00176C  CFF5 F048          	movff	tablat,__pdataCOMRAM+1
   394  001770                     end_of_initialization:
   395                           	opt stack 0
   396  001770                     __end_of__initialization:
   397                           	opt stack 0
   398  001770  0E00               	movlw	low (__Lmediumconst shr (0+16))
   399  001772  6EF8               	movwf	tblptru,c
   400  001774  0100               	movlb	0
   401  001776  EF76  F00C         	goto	_main	;jump to C main() function
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	bitbssCOMRAM
   412  000248                     __pbitbssCOMRAM:
   413                           	opt stack 0
   414  000248                     _transmitting:
   415                           	opt stack 0
   416  000248                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	bssCOMRAM
   427  000001                     __pbssCOMRAM:
   428                           	opt stack 0
   429  000001                     _timer0_millis:
   430                           	opt stack 0
   431  000001                     	ds	4
   432  000005                     _timer1_toggle_count:
   433                           	opt stack 0
   434  000005                     	ds	4
   435  000009                     __inverse_logic:
   436                           	opt stack 0
   437  000009                     	ds	2
   438  00000B                     __receive_buffer_head:
   439                           	opt stack 0
   440  00000B                     	ds	2
   441  00000D                     __receive_buffer_tail:
   442                           	opt stack 0
   443  00000D                     	ds	2
   444  00000F                     __rx_buffer:
   445                           	opt stack 0
   446  00000F                     	ds	2
   447  000011                     __tx_buffer:
   448                           	opt stack 0
   449  000011                     	ds	2
   450  000013                     __tx_delay:
   451                           	opt stack 0
   452  000013                     	ds	2
   453  000015                     _ocr:
   454                           	opt stack 0
   455  000015                     	ds	2
   456  000017                     _HW:
   457                           	opt stack 0
   458  000017                     	ds	1
   459  000018                     _INTFlag:
   460                           	opt stack 0
   461  000018                     	ds	1
   462  000019                     _SERIAL_ERR:
   463                           	opt stack 0
   464  000019                     	ds	1
   465  00001A                     _TxRx:
   466                           	opt stack 0
   467  00001A                     	ds	1
   468  00001B                     __AX12_CTRL:
   469                           	opt stack 0
   470  00001B                     	ds	1
   471  00001C                     __G15_CTRL:
   472                           	opt stack 0
   473  00001C                     	ds	1
   474  00001D                     __displaycontrol:
   475                           	opt stack 0
   476  00001D                     	ds	1
   477  00001E                     __displayfunction:
   478                           	opt stack 0
   479  00001E                     	ds	1
   480  00001F                     __displaymode:
   481                           	opt stack 0
   482  00001F                     	ds	1
   483  000020                     __enable_pin:
   484                           	opt stack 0
   485  000020                     	ds	1
   486  000021                     __mode:
   487                           	opt stack 0
   488  000021                     	ds	1
   489  000022                     __numlines:
   490                           	opt stack 0
   491  000022                     	ds	1
   492  000023                     __receiveBitMask:
   493                           	opt stack 0
   494  000023                     	ds	1
   495  000024                     __receivePin:
   496                           	opt stack 0
   497  000024                     	ds	1
   498  000025                     __rs_pin:
   499                           	opt stack 0
   500  000025                     	ds	1
   501  000026                     __transmitBitMask:
   502                           	opt stack 0
   503  000026                     	ds	1
   504  000027                     _analog_reference:
   505                           	opt stack 0
   506  000027                     	ds	1
   507  000028                     _randf:
   508                           	opt stack 0
   509  000028                     	ds	1
   510  000029                     _timer0_fract:
   511                           	opt stack 0
   512  000029                     	ds	1
   513  00002A                     _timer1_pin_mask:
   514                           	opt stack 0
   515  00002A                     	ds	1
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           postdec1	equ	0xFE5
   523                           fsr1l	equ	0xFE1
   524                           
   525                           	psect	dataCOMRAM
   526  000047                     __pdataCOMRAM:
   527                           	opt stack 0
   528  000047                     _position:
   529                           	opt stack 0
   530  000047                     	ds	1
   531  000048                     _tone_pins:
   532                           	opt stack 0
   533  000048                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	bssBANK0
   544  000060                     __pbssBANK0:
   545                           	opt stack 0
   546  000060                     __data_pins:
   547                           	opt stack 0
   548  000060                     	ds	8
   549  000068                     _intFunc:
   550                           	opt stack 0
   551  000068                     	ds	6
   552  00006E                     __startMillis:
   553                           	opt stack 0
   554  00006E                     	ds	4
   555  000072                     __timeout:
   556                           	opt stack 0
   557  000072                     	ds	4
   558  000076                     _randx:
   559                           	opt stack 0
   560  000076                     	ds	4
   561  00007A                     _timer0_overflow_count:
   562                           	opt stack 0
   563  00007A                     	ds	4
   564  00007E                     SC08A_getPos@F5645:
   565                           	opt stack 0
   566  00007E                     	ds	2
   567  000080                     __buffer_overflow:
   568                           	opt stack 0
   569  000080                     	ds	2
   570  000082                     __receivePortRegister:
   571                           	opt stack 0
   572  000082                     	ds	2
   573  000084                     __rx_delay_centering:
   574                           	opt stack 0
   575  000084                     	ds	2
   576  000086                     __rx_delay_intrabit:
   577                           	opt stack 0
   578  000086                     	ds	2
   579  000088                     __rx_delay_stopbit:
   580                           	opt stack 0
   581  000088                     	ds	2
   582  00008A                     __transmitPortRegister:
   583                           	opt stack 0
   584  00008A                     	ds	2
   585  00008C                     _timer1_pin_port:
   586                           	opt stack 0
   587  00008C                     	ds	2
   588  00008E                     _tx_buffer:
   589                           	opt stack 0
   590  00008E                     	ds	68
   591  0000D2                     _ps_data:
   592                           	opt stack 0
   593  0000D2                     	ds	6
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK0
   604  0000F1                     __pdataBANK0:
   605                           	opt stack 0
   606  0000F1                     lcd_setCursor@F5717:
   607                           	opt stack 0
   608  0000F1                     	ds	8
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1l	equ	0xFE1
   617                           
   618                           	psect	bssBANK1
   619  000100                     __pbssBANK1:
   620                           	opt stack 0
   621  000100                     __receive_buffer:
   622                           	opt stack 0
   623  000100                     	ds	64
   624  000140                     _rx_buffer:
   625                           	opt stack 0
   626  000140                     	ds	68
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	cstackBANK1
   637  000184                     __pcstackBANK1:
   638                           	opt stack 0
   639  000184                     pinMode@mode:
   640                           	opt stack 0
   641  000184                     turnOffPWM@timer:
   642                           	opt stack 0
   643  000184                     delay@ms:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x0
   647  000184                     	ds	1
   648  000185                     ??_pinMode:
   649  000185                     digitalWrite@val:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x1
   653  000185                     	ds	1
   654  000186                     ??_digitalWrite:
   655  000186                     pinMode@oldGIE:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x2
   659  000186                     	ds	1
   660  000187                     pinMode@oldGIE_867:
   661                           	opt stack 0
   662  000187                     digitalWrite@oldGIE:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x3
   666  000187                     	ds	1
   667  000188                     ??_delay:
   668  000188                     pinMode@pin:
   669                           	opt stack 0
   670  000188                     digitalWrite@out:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x4
   674  000188                     	ds	1
   675  000189                     pinMode@reg:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x5
   679  000189                     	ds	1
   680  00018A                     digitalWrite@timer:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x6
   684  00018A                     	ds	1
   685  00018B                     pinMode@_bit:
   686                           	opt stack 0
   687  00018B                     digitalWrite@_bit:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x7
   691  00018B                     	ds	1
   692  00018C                     pinMode@port:
   693                           	opt stack 0
   694  00018C                     digitalWrite@port:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x8
   698  00018C                     	ds	1
   699  00018D                     digitalWrite@pin:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x9
   703  00018D                     	ds	1
   704  00018E                     tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           ; 0 bytes @ 0xA
   714                           
   715                           	psect	cstackBANK0
   716  0000D8                     __pcstackBANK0:
   717                           	opt stack 0
   718  0000D8                     SSerial_recv@noti:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x0
   722  0000D8                     	ds	1
   723  0000D9                     _SSerial_recv$1296:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x1
   727  0000D9                     	ds	2
   728  0000DB                     SSerial_recv@d:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x3
   732  0000DB                     	ds	1
   733  0000DC                     SSerial_recv@i:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x4
   737  0000DC                     	ds	1
   738  0000DD                     ??_high_isr:
   739                           
   740                           ; 0 bytes @ 0x5
   741  0000DD                     	ds	14
   742  0000EB                     high_isr@c:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x13
   746  0000EB                     	ds	1
   747  0000EC                     high_isr@m:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x14
   751  0000EC                     	ds	4
   752  0000F0                     high_isr@f:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x18
   756  0000F0                     	ds	1
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           postdec1	equ	0xFE5
   764                           fsr1l	equ	0xFE1
   765                           
   766                           	psect	cstackCOMRAM
   767  00002B                     __pcstackCOMRAM:
   768                           	opt stack 0
   769  00002B                     disableTimer@_timer:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x0
   773  00002B                     	ds	1
   774  00002C                     ??_low_isr:
   775                           
   776                           ; 0 bytes @ 0x1
   777  00002C                     	ds	19
   778  00003F                     low_isr@c:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x14
   782  00003F                     	ds	1
   783  000040                     ??_digitalToggle:
   784  000040                     store_char@buffer:
   785                           	opt stack 0
   786  000040                     tunedDelay@delay:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x15
   790  000040                     	ds	1
   791  000041                     digitalToggle@pin:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x16
   795  000041                     	ds	1
   796  000042                     ??_SSerial_recv:
   797  000042                     ??_store_char:
   798  000042                     
   799                           ; 0 bytes @ 0x17
   800  000042                     	ds	2
   801  000044                     store_char@c:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x19
   805  000044                     	ds	1
   806  000045                     store_char@i:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x1A
   810  000045                     	ds	2
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           
   820 ;;
   821 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   822 ;;
   823 ;; *************** function _main *****************
   824 ;; Defined at:
   825 ;;		line 11 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels required when called:    8
   845 ;; This function calls:
   846 ;;		_init
   847 ;;		_loop
   848 ;;		_setup
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text0
   855  0018EC                     __ptext0:
   856                           	opt stack 0
   857  0018EC                     _main:
   858                           	opt stack 23
   859                           
   860                           ;main.c: 13: init();
   861                           
   862                           ;incstack = 0
   863  0018EC  EC0C  F00C         	call	_init	;wreg free
   864                           
   865                           ;main.c: 15: setup();
   866  0018F0  EC7D  F00C         	call	_setup	;wreg free
   867  0018F4                     l7789:
   868                           
   869                           ;main.c: 18: {
   870                           ;main.c: 19: loop();
   871  0018F4  ECBD  F00B         	call	_loop	;wreg free
   872  0018F8  D7FD               	goto	l7789
   873  0018FA                     __end_of_main:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           postdec1	equ	0xFE5
   882                           fsr1l	equ	0xFE1
   883                           
   884 ;; *************** function _setup *****************
   885 ;; Defined at:
   886 ;;		line 8 in file "User-Template.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   900 ;;      Params:         0       0       0       0       0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    6
   907 ;; This function calls:
   908 ;;		_pinMode
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text1
   915  0018FA                     __ptext1:
   916                           	opt stack 0
   917  0018FA                     _setup:
   918                           	opt stack 24
   919                           
   920                           ;User-Template.c: 10: pinMode(13, 1);
   921                           
   922                           ;incstack = 0
   923  0018FA  0E01               	movlw	1
   924  0018FC  0101               	movlb	1	; () banked
   925  0018FE  6F84               	movwf	pinMode@mode& (0+255),b
   926  001900  0E0D               	movlw	13
   927  001902  ECE5  F00A         	call	_pinMode
   928  001906  0012               	return	
   929  001908                     __end_of_setup:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           postdec1	equ	0xFE5
   938                           fsr1l	equ	0xFE1
   939                           
   940 ;; *************** function _pinMode *****************
   941 ;; Defined at:
   942 ;;		line 12 in file "wiring_digital.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  pin             1    wreg     unsigned char 
   945 ;;  mode            1    0[BANK1 ] unsigned char 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  pin             1    4[BANK1 ] unsigned char 
   948 ;;  oldGIE          1    3[BANK1 ] unsigned char 
   949 ;;  oldGIE          1    2[BANK1 ] unsigned char 
   950 ;;  reg             2    5[BANK1 ] PTR volatile unsigned ch
   951 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
   952 ;;		 -> TRISA(1), NULL(0), 
   953 ;;  port            1    8[BANK1 ] unsigned char 
   954 ;;  _bit            1    7[BANK1 ] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   964 ;;      Params:         0       0       1       0       0       0       0       0       0
   965 ;;      Locals:         0       0       7       0       0       0       0       0       0
   966 ;;      Temps:          0       0       1       0       0       0       0       0       0
   967 ;;      Totals:         0       0       9       0       0       0       0       0       0
   968 ;;Total ram usage:        9 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    5
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_setup
   975 ;;		_attachInterrupt
   976 ;;		_tone
   977 ;;		_analogWrite
   978 ;;		_lcd_4bit
   979 ;;		_lcd_8bit
   980 ;;		_lcd_write4bits
   981 ;;		_lcd_write8bits
   982 ;;		_SSerial_setTx
   983 ;;		_SSerial_setRx
   984 ;;		_G15_begin
   985 ;;		_PS2_begin
   986 ;;		_Shield2AMotor_begin
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text2
   991  0015CA                     __ptext2:
   992                           	opt stack 0
   993  0015CA                     _pinMode:
   994                           	opt stack 24
   995                           
   996                           ;incstack = 0
   997                           ;pinMode@pin stored from wreg
   998  0015CA  0101               	movlb	1	; () banked
   999  0015CC  6F88               	movwf	pinMode@pin& (0+255),b
  1000                           
  1001                           ; BSR set to: 1
  1002                           ;wiring_digital.c: 14: UINT8 _bit = digitalPinToBitMask[pin];
  1003  0015CE  0101               	movlb	1	; () banked
  1004  0015D0  5188               	movf	pinMode@pin& (0+255),w,b
  1005  0015D2  0D01               	mullw	1
  1006  0015D4  0E3D               	movlw	low _digitalPinToBitMask
  1007  0015D6  24F3               	addwf	prodl,w,c
  1008  0015D8  6EF6               	movwf	tblptrl,c
  1009  0015DA  0E12               	movlw	high _digitalPinToBitMask
  1010  0015DC  20F4               	addwfc	prodh,w,c
  1011  0015DE  6EF7               	movwf	tblptrh,c
  1012  0015E0                     	if	0	;There are less than 3 active tblptr bytes
  1013  0015E0                     	endif
  1014  0015E0  0008               	tblrd		*
  1015  0015E2  0101               	movlb	1	; () banked
  1016  0015E4  CFF5 F18B          	movff	tablat,pinMode@_bit
  1017                           
  1018                           ;wiring_digital.c: 15: UINT8 port = digitalPinToPort[pin];
  1019  0015E8  0101               	movlb	1	; () banked
  1020  0015EA  5188               	movf	pinMode@pin& (0+255),w,b
  1021  0015EC  0D01               	mullw	1
  1022  0015EE  0E58               	movlw	low _digitalPinToPort
  1023  0015F0  24F3               	addwf	prodl,w,c
  1024  0015F2  6EF6               	movwf	tblptrl,c
  1025  0015F4  0E12               	movlw	high _digitalPinToPort
  1026  0015F6  20F4               	addwfc	prodh,w,c
  1027  0015F8  6EF7               	movwf	tblptrh,c
  1028  0015FA                     	if	0	;There are less than 3 active tblptr bytes
  1029  0015FA                     	endif
  1030  0015FA  0008               	tblrd		*
  1031  0015FC  0101               	movlb	1	; () banked
  1032  0015FE  CFF5 F18C          	movff	tablat,pinMode@port
  1033                           
  1034                           ; BSR set to: 1
  1035                           ;wiring_digital.c: 16: volatile UINT8 *reg;
  1036                           ;wiring_digital.c: 18: if(port == 0) return;
  1037  001602  0101               	movlb	1	; () banked
  1038  001604  678C               	tstfsz	pinMode@port& (0+255),b
  1039  001606  D001               	goto	l7127
  1040  001608  D044               	goto	l790
  1041  00160A                     l7127:
  1042                           
  1043                           ; BSR set to: 1
  1044                           ;wiring_digital.c: 20: reg = portModeRegister[port];
  1045  00160A  0101               	movlb	1	; () banked
  1046  00160C  518C               	movf	pinMode@port& (0+255),w,b
  1047  00160E  0D02               	mullw	2
  1048  001610  0E9A               	movlw	low _portModeRegister
  1049  001612  24F3               	addwf	prodl,w,c
  1050  001614  6EF6               	movwf	tblptrl,c
  1051  001616  0E12               	movlw	high _portModeRegister
  1052  001618  20F4               	addwfc	prodh,w,c
  1053  00161A  6EF7               	movwf	tblptrh,c
  1054  00161C                     	if	0	;There are less than 3 active tblptr bytes
  1055  00161C                     	endif
  1056  00161C  0009               	tblrd		*+
  1057  00161E  0101               	movlb	1	; () banked
  1058  001620  CFF5 F189          	movff	tablat,pinMode@reg
  1059  001624  000A               	tblrd		*-
  1060  001626  0101               	movlb	1	; () banked
  1061  001628  CFF5 F18A          	movff	tablat,pinMode@reg+1
  1062                           
  1063                           ; BSR set to: 1
  1064                           ;wiring_digital.c: 22: if(mode == 0)
  1065  00162C  0101               	movlb	1	; () banked
  1066  00162E  6784               	tstfsz	pinMode@mode& (0+255),b
  1067  001630  D016               	goto	l7139
  1068                           
  1069                           ; BSR set to: 1
  1070                           ;wiring_digital.c: 23: {
  1071                           ;wiring_digital.c: 24: UINT8 oldGIE = GIE;
  1072  001632  0E00               	movlw	0
  1073  001634  BEF2               	btfsc	intcon,7,c	;volatile
  1074  001636  0E01               	movlw	1
  1075  001638  0101               	movlb	1	; () banked
  1076  00163A  6F86               	movwf	pinMode@oldGIE& (0+255),b
  1077                           
  1078                           ; BSR set to: 1
  1079                           ;wiring_digital.c: 25: (INTCONbits.GIE = 0);
  1080  00163C  9EF2               	bcf	intcon,7,c	;volatile
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;wiring_digital.c: 26: *reg |= _bit;
  1084  00163E  C189  FFD9         	movff	pinMode@reg,fsr2l
  1085  001642  C18A  FFDA         	movff	pinMode@reg+1,fsr2h
  1086  001646  0101               	movlb	1	; () banked
  1087  001648  518B               	movf	pinMode@_bit& (0+255),w,b
  1088  00164A  12DF               	iorwf	indf2,f,c
  1089                           
  1090                           ; BSR set to: 1
  1091                           ;wiring_digital.c: 27: GIE = oldGIE;
  1092  00164C  0101               	movlb	1	; () banked
  1093  00164E  A186               	btfss	pinMode@oldGIE& (0+255),0,b
  1094  001650  D001               	bra	u5325
  1095  001652  8EF2               	bsf	intcon,7,c	;volatile
  1096  001654                     u5325:
  1097  001654  0101               	movlb	1	; () banked
  1098  001656  B186               	btfsc	pinMode@oldGIE& (0+255),0,b
  1099  001658  D001               	bra	u5326
  1100  00165A  D01A               	goto	L1
  1101  00165C                     u5326:
  1102                           
  1103                           ;wiring_digital.c: 28: }
  1104  00165C  D01A               	goto	l790
  1105  00165E                     l7139:
  1106                           
  1107                           ; BSR set to: 1
  1108                           ;wiring_digital.c: 29: else
  1109                           ;wiring_digital.c: 30: {
  1110                           ;wiring_digital.c: 31: UINT8 oldGIE = GIE;
  1111  00165E  0E00               	movlw	0
  1112  001660  BEF2               	btfsc	intcon,7,c	;volatile
  1113  001662  0E01               	movlw	1
  1114  001664  0101               	movlb	1	; () banked
  1115  001666  6F87               	movwf	pinMode@oldGIE_867& (0+255),b
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;wiring_digital.c: 32: (INTCONbits.GIE = 0);
  1119  001668  9EF2               	bcf	intcon,7,c	;volatile
  1120                           
  1121                           ; BSR set to: 1
  1122                           ;wiring_digital.c: 33: *reg &= ~_bit;
  1123  00166A  0101               	movlb	1	; () banked
  1124  00166C  518B               	movf	pinMode@_bit& (0+255),w,b
  1125  00166E  0AFF               	xorlw	255
  1126  001670  0101               	movlb	1	; () banked
  1127  001672  6F85               	movwf	??_pinMode& (0+255),b
  1128  001674  C189  FFD9         	movff	pinMode@reg,fsr2l
  1129  001678  C18A  FFDA         	movff	pinMode@reg+1,fsr2h
  1130  00167C  0101               	movlb	1	; () banked
  1131  00167E  5185               	movf	??_pinMode& (0+255),w,b
  1132  001680  16DF               	andwf	indf2,f,c
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;wiring_digital.c: 34: GIE = oldGIE;
  1136  001682  0101               	movlb	1	; () banked
  1137  001684  A187               	btfss	pinMode@oldGIE_867& (0+255),0,b
  1138  001686  D001               	bra	u5335
  1139  001688  8EF2               	bsf	intcon,7,c	;volatile
  1140  00168A                     u5335:
  1141  00168A  0101               	movlb	1	; () banked
  1142  00168C  B187               	btfsc	pinMode@oldGIE_867& (0+255),0,b
  1143  00168E  D001               	bra	u5336
  1144  001690                     L1:
  1145  001690  9EF2               	bcf	intcon,7,c	;volatile
  1146  001692                     u5336:
  1147  001692                     l790:
  1148                           
  1149                           ; BSR set to: 1
  1150  001692  0012               	return	
  1151  001694                     __end_of_pinMode:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           intcon	equ	0xFF2
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           postdec1	equ	0xFE5
  1163                           fsr1l	equ	0xFE1
  1164                           indf2	equ	0xFDF
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           
  1168 ;; *************** function _loop *****************
  1169 ;; Defined at:
  1170 ;;		line 13 in file "User-Template.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;		None               void
  1177 ;; Registers used:
  1178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    7
  1191 ;; This function calls:
  1192 ;;		_delay
  1193 ;;		_digitalWrite
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text3
  1200  00177A                     __ptext3:
  1201                           	opt stack 0
  1202  00177A                     _loop:
  1203                           	opt stack 23
  1204                           
  1205                           ;User-Template.c: 15: digitalWrite(13, 1);
  1206                           
  1207                           ; BSR set to: 1
  1208                           ;incstack = 0
  1209  00177A  0E01               	movlw	1
  1210  00177C  0101               	movlb	1	; () banked
  1211  00177E  6F85               	movwf	digitalWrite@val& (0+255),b
  1212  001780  0E0D               	movlw	13
  1213  001782  EC79  F00A         	call	_digitalWrite
  1214                           
  1215                           ;User-Template.c: 16: delay(1000);
  1216  001786  0EE8               	movlw	232
  1217  001788  0101               	movlb	1	; () banked
  1218  00178A  6F84               	movwf	delay@ms& (0+255),b
  1219  00178C  0E03               	movlw	3
  1220  00178E  0101               	movlb	1	; () banked
  1221  001790  6F85               	movwf	(delay@ms+1)& (0+255),b
  1222  001792  0E00               	movlw	0
  1223  001794  0101               	movlb	1	; () banked
  1224  001796  6F86               	movwf	(delay@ms+2)& (0+255),b
  1225  001798  0E00               	movlw	0
  1226  00179A  0101               	movlb	1	; () banked
  1227  00179C  6F87               	movwf	(delay@ms+3)& (0+255),b
  1228  00179E  EC31  F00C         	call	_delay	;wreg free
  1229                           
  1230                           ;User-Template.c: 17: digitalWrite(13, 0);
  1231  0017A2  0E00               	movlw	0
  1232  0017A4  0101               	movlb	1	; () banked
  1233  0017A6  6F85               	movwf	digitalWrite@val& (0+255),b
  1234  0017A8  0E0D               	movlw	13
  1235  0017AA  EC79  F00A         	call	_digitalWrite
  1236                           
  1237                           ;User-Template.c: 18: delay(1000);
  1238  0017AE  0EE8               	movlw	232
  1239  0017B0  0101               	movlb	1	; () banked
  1240  0017B2  6F84               	movwf	delay@ms& (0+255),b
  1241  0017B4  0E03               	movlw	3
  1242  0017B6  0101               	movlb	1	; () banked
  1243  0017B8  6F85               	movwf	(delay@ms+1)& (0+255),b
  1244  0017BA  0E00               	movlw	0
  1245  0017BC  0101               	movlb	1	; () banked
  1246  0017BE  6F86               	movwf	(delay@ms+2)& (0+255),b
  1247  0017C0  0E00               	movlw	0
  1248  0017C2  0101               	movlb	1	; () banked
  1249  0017C4  6F87               	movwf	(delay@ms+3)& (0+255),b
  1250  0017C6  EC31  F00C         	call	_delay	;wreg free
  1251  0017CA  0012               	return	
  1252  0017CC                     __end_of_loop:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           prodh	equ	0xFF4
  1259                           prodl	equ	0xFF3
  1260                           intcon	equ	0xFF2
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           fsr1l	equ	0xFE1
  1265                           indf2	equ	0xFDF
  1266                           fsr2h	equ	0xFDA
  1267                           fsr2l	equ	0xFD9
  1268                           
  1269 ;; *************** function _digitalWrite *****************
  1270 ;; Defined at:
  1271 ;;		line 52 in file "wiring_digital.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  pin             1    wreg     unsigned char 
  1274 ;;  val             1    1[BANK1 ] unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  pin             1    9[BANK1 ] unsigned char 
  1277 ;;  out             2    4[BANK1 ] PTR volatile unsigned ch
  1278 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1279 ;;		 -> LATA(1), NULL(0), 
  1280 ;;  port            1    8[BANK1 ] unsigned char 
  1281 ;;  _bit            1    7[BANK1 ] unsigned char 
  1282 ;;  timer           1    6[BANK1 ] unsigned char 
  1283 ;;  oldGIE          1    3[BANK1 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       1       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       7       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       1       0       0       0       0       0       0
  1296 ;;      Totals:         0       0       9       0       0       0       0       0       0
  1297 ;;Total ram usage:        9 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    6
  1300 ;; This function calls:
  1301 ;;		_turnOffPWM
  1302 ;; This function is called by:
  1303 ;;		_loop
  1304 ;;		_noTone
  1305 ;;		_analogWrite
  1306 ;;		_shiftIn
  1307 ;;		_shiftOut
  1308 ;;		_lcd_begin
  1309 ;;		_lcd_send
  1310 ;;		_lcd_write4bits
  1311 ;;		_lcd_write8bits
  1312 ;;		_lcd_pulseEnable
  1313 ;;		_SSerial_setTx
  1314 ;;		_G15_begin
  1315 ;;		_setTx
  1316 ;;		_setRx
  1317 ;;		_PS2_begin
  1318 ;;		_PS2_reset
  1319 ;;		_Shield2AMotor_begin
  1320 ;;		_Shield2AMotor_control
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text4
  1325  0014F2                     __ptext4:
  1326                           	opt stack 0
  1327  0014F2                     _digitalWrite:
  1328                           	opt stack 23
  1329                           
  1330                           ;incstack = 0
  1331                           ;digitalWrite@pin stored from wreg
  1332  0014F2  0101               	movlb	1	; () banked
  1333  0014F4  6F8D               	movwf	digitalWrite@pin& (0+255),b
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;wiring_digital.c: 54: UINT8 timer = digitalPinToTimer[pin];
  1337  0014F6  0101               	movlb	1	; () banked
  1338  0014F8  518D               	movf	digitalWrite@pin& (0+255),w,b
  1339  0014FA  0D01               	mullw	1
  1340  0014FC  0E73               	movlw	low _digitalPinToTimer
  1341  0014FE  24F3               	addwf	prodl,w,c
  1342  001500  6EF6               	movwf	tblptrl,c
  1343  001502  0E12               	movlw	high _digitalPinToTimer
  1344  001504  20F4               	addwfc	prodh,w,c
  1345  001506  6EF7               	movwf	tblptrh,c
  1346  001508                     	if	0	;There are less than 3 active tblptr bytes
  1347  001508                     	endif
  1348  001508  0008               	tblrd		*
  1349  00150A  0101               	movlb	1	; () banked
  1350  00150C  CFF5 F18A          	movff	tablat,digitalWrite@timer
  1351                           
  1352                           ;wiring_digital.c: 55: UINT8 _bit = digitalPinToBitMask[pin];
  1353  001510  0101               	movlb	1	; () banked
  1354  001512  518D               	movf	digitalWrite@pin& (0+255),w,b
  1355  001514  0D01               	mullw	1
  1356  001516  0E3D               	movlw	low _digitalPinToBitMask
  1357  001518  24F3               	addwf	prodl,w,c
  1358  00151A  6EF6               	movwf	tblptrl,c
  1359  00151C  0E12               	movlw	high _digitalPinToBitMask
  1360  00151E  20F4               	addwfc	prodh,w,c
  1361  001520  6EF7               	movwf	tblptrh,c
  1362  001522                     	if	0	;There are less than 3 active tblptr bytes
  1363  001522                     	endif
  1364  001522  0008               	tblrd		*
  1365  001524  0101               	movlb	1	; () banked
  1366  001526  CFF5 F18B          	movff	tablat,digitalWrite@_bit
  1367                           
  1368                           ;wiring_digital.c: 56: UINT8 port = digitalPinToPort[pin];
  1369  00152A  0101               	movlb	1	; () banked
  1370  00152C  518D               	movf	digitalWrite@pin& (0+255),w,b
  1371  00152E  0D01               	mullw	1
  1372  001530  0E58               	movlw	low _digitalPinToPort
  1373  001532  24F3               	addwf	prodl,w,c
  1374  001534  6EF6               	movwf	tblptrl,c
  1375  001536  0E12               	movlw	high _digitalPinToPort
  1376  001538  20F4               	addwfc	prodh,w,c
  1377  00153A  6EF7               	movwf	tblptrh,c
  1378  00153C                     	if	0	;There are less than 3 active tblptr bytes
  1379  00153C                     	endif
  1380  00153C  0008               	tblrd		*
  1381  00153E  0101               	movlb	1	; () banked
  1382  001540  CFF5 F18C          	movff	tablat,digitalWrite@port
  1383                           
  1384                           ; BSR set to: 1
  1385                           ;wiring_digital.c: 57: volatile UINT8 *out;
  1386                           ;wiring_digital.c: 59: if(port == 0) return;
  1387  001544  0101               	movlb	1	; () banked
  1388  001546  678C               	tstfsz	digitalWrite@port& (0+255),b
  1389  001548  D001               	goto	l7153
  1390  00154A  D03E               	goto	l803
  1391  00154C                     l7153:
  1392                           
  1393                           ; BSR set to: 1
  1394                           ;wiring_digital.c: 61: if(timer != 0) turnOffPWM(timer);
  1395  00154C  0101               	movlb	1	; () banked
  1396  00154E  518A               	movf	digitalWrite@timer& (0+255),w,b
  1397  001550  B4D8               	btfsc	status,2,c
  1398  001552  D004               	goto	l7157
  1399                           
  1400                           ; BSR set to: 1
  1401  001554  0101               	movlb	1	; () banked
  1402  001556  518A               	movf	digitalWrite@timer& (0+255),w,b
  1403  001558  EC4E  F00C         	call	_turnOffPWM
  1404  00155C                     l7157:
  1405                           
  1406                           ;wiring_digital.c: 63: out = portOutputRegister[port];
  1407  00155C  0101               	movlb	1	; () banked
  1408  00155E  518C               	movf	digitalWrite@port& (0+255),w,b
  1409  001560  0D02               	mullw	2
  1410  001562  0EA6               	movlw	low _portOutputRegister
  1411  001564  24F3               	addwf	prodl,w,c
  1412  001566  6EF6               	movwf	tblptrl,c
  1413  001568  0E12               	movlw	high _portOutputRegister
  1414  00156A  20F4               	addwfc	prodh,w,c
  1415  00156C  6EF7               	movwf	tblptrh,c
  1416  00156E                     	if	0	;There are less than 3 active tblptr bytes
  1417  00156E                     	endif
  1418  00156E  0009               	tblrd		*+
  1419  001570  0101               	movlb	1	; () banked
  1420  001572  CFF5 F188          	movff	tablat,digitalWrite@out
  1421  001576  000A               	tblrd		*-
  1422  001578  0101               	movlb	1	; () banked
  1423  00157A  CFF5 F189          	movff	tablat,digitalWrite@out+1
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;wiring_digital.c: 65: UINT8 oldGIE = GIE;
  1427  00157E  0E00               	movlw	0
  1428  001580  BEF2               	btfsc	intcon,7,c	;volatile
  1429  001582  0E01               	movlw	1
  1430  001584  0101               	movlb	1	; () banked
  1431  001586  6F87               	movwf	digitalWrite@oldGIE& (0+255),b
  1432                           
  1433                           ; BSR set to: 1
  1434                           ;wiring_digital.c: 66: (INTCONbits.GIE = 0);
  1435  001588  9EF2               	bcf	intcon,7,c	;volatile
  1436                           
  1437                           ; BSR set to: 1
  1438                           ;wiring_digital.c: 67: if(val == 0)
  1439  00158A  0101               	movlb	1	; () banked
  1440  00158C  6785               	tstfsz	digitalWrite@val& (0+255),b
  1441  00158E  D00D               	goto	l7167
  1442                           
  1443                           ; BSR set to: 1
  1444                           ;wiring_digital.c: 68: {
  1445                           ;wiring_digital.c: 69: *out &= ~_bit;
  1446  001590  0101               	movlb	1	; () banked
  1447  001592  518B               	movf	digitalWrite@_bit& (0+255),w,b
  1448  001594  0AFF               	xorlw	255
  1449  001596  0101               	movlb	1	; () banked
  1450  001598  6F86               	movwf	??_digitalWrite& (0+255),b
  1451  00159A  C188  FFD9         	movff	digitalWrite@out,fsr2l
  1452  00159E  C189  FFDA         	movff	digitalWrite@out+1,fsr2h
  1453  0015A2  0101               	movlb	1	; () banked
  1454  0015A4  5186               	movf	??_digitalWrite& (0+255),w,b
  1455  0015A6  16DF               	andwf	indf2,f,c
  1456                           
  1457                           ;wiring_digital.c: 70: }
  1458  0015A8  D007               	goto	l7169
  1459  0015AA                     l7167:
  1460                           
  1461                           ; BSR set to: 1
  1462                           ;wiring_digital.c: 71: else
  1463                           ;wiring_digital.c: 72: {
  1464                           ;wiring_digital.c: 73: *out |= _bit;
  1465  0015AA  C188  FFD9         	movff	digitalWrite@out,fsr2l
  1466  0015AE  C189  FFDA         	movff	digitalWrite@out+1,fsr2h
  1467  0015B2  0101               	movlb	1	; () banked
  1468  0015B4  518B               	movf	digitalWrite@_bit& (0+255),w,b
  1469  0015B6  12DF               	iorwf	indf2,f,c
  1470  0015B8                     l7169:
  1471                           
  1472                           ; BSR set to: 1
  1473                           ;wiring_digital.c: 74: }
  1474                           ;wiring_digital.c: 75: GIE = oldGIE;
  1475  0015B8  0101               	movlb	1	; () banked
  1476  0015BA  A187               	btfss	digitalWrite@oldGIE& (0+255),0,b
  1477  0015BC  D001               	bra	u5375
  1478  0015BE  8EF2               	bsf	intcon,7,c	;volatile
  1479  0015C0                     u5375:
  1480  0015C0  0101               	movlb	1	; () banked
  1481  0015C2  B187               	btfsc	digitalWrite@oldGIE& (0+255),0,b
  1482  0015C4  D001               	bra	u5376
  1483  0015C6  9EF2               	bcf	intcon,7,c	;volatile
  1484  0015C8                     u5376:
  1485  0015C8                     l803:
  1486                           
  1487                           ; BSR set to: 1
  1488  0015C8  0012               	return	
  1489  0015CA                     __end_of_digitalWrite:
  1490                           	opt stack 0
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           intcon	equ	0xFF2
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           indf2	equ	0xFDF
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _turnOffPWM *****************
  1508 ;; Defined at:
  1509 ;;		line 38 in file "wiring_digital.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  timer           1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  timer           1    0[BANK1 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         0       0       1       0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    5
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_digitalWrite
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text5
  1538  00189C                     __ptext5:
  1539                           	opt stack 0
  1540  00189C                     _turnOffPWM:
  1541                           	opt stack 23
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;incstack = 0
  1545                           ;turnOffPWM@timer stored from wreg
  1546  00189C  0101               	movlb	1	; () banked
  1547  00189E  6F84               	movwf	turnOffPWM@timer& (0+255),b
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;wiring_digital.c: 40: switch(timer)
  1551  0018A0  D00A               	goto	l7095
  1552  0018A2                     l796:
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;wiring_digital.c: 43: CCP1CONbits.CCP1M = 0;
  1556  0018A2  90BD               	bcf	4029,0,c	;volatile
  1557  0018A4  92BD               	bcf	4029,1,c	;volatile
  1558  0018A6  94BD               	bcf	4029,2,c	;volatile
  1559  0018A8  96BD               	bcf	4029,3,c	;volatile
  1560                           
  1561                           ;wiring_digital.c: 44: break;
  1562  0018AA  D00D               	goto	l799
  1563  0018AC                     l798:
  1564                           
  1565                           ; BSR set to: 1
  1566                           ;wiring_digital.c: 47: CCP2CONbits.CCP2M = 0;
  1567  0018AC  90BA               	bcf	4026,0,c	;volatile
  1568  0018AE  92BA               	bcf	4026,1,c	;volatile
  1569  0018B0  94BA               	bcf	4026,2,c	;volatile
  1570  0018B2  96BA               	bcf	4026,3,c	;volatile
  1571                           
  1572                           ;wiring_digital.c: 48: break;
  1573  0018B4  D008               	goto	l799
  1574  0018B6                     l7095:
  1575                           
  1576                           ; BSR set to: 1
  1577  0018B6  0101               	movlb	1	; () banked
  1578  0018B8  5184               	movf	turnOffPWM@timer& (0+255),w,b
  1579                           
  1580                           ; Switch size 1, requested type "space"
  1581                           ; Number of cases is 2, Range of values is 1 to 2
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            7     4 (average)
  1585                           ;	Chosen strategy is simple_byte
  1586  0018BA  0A01               	xorlw	1	; case 1
  1587  0018BC  B4D8               	btfsc	status,2,c
  1588  0018BE  D7F1               	goto	l796
  1589  0018C0  0A03               	xorlw	3	; case 2
  1590  0018C2  B4D8               	btfsc	status,2,c
  1591  0018C4  D7F3               	goto	l798
  1592  0018C6                     l799:
  1593                           
  1594                           ; BSR set to: 1
  1595  0018C6  0012               	return	
  1596  0018C8                     __end_of_turnOffPWM:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1l	equ	0xFE1
  1609                           indf2	equ	0xFDF
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _delay *****************
  1615 ;; Defined at:
  1616 ;;		line 43 in file "wiring.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  ms              4    0[BANK1 ] unsigned long 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;		None               void
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         0       0       4       0       0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       1       0       0       0       0       0       0
  1633 ;;      Totals:         0       0       5       0       0       0       0       0       0
  1634 ;;Total ram usage:        5 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    5
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_loop
  1641 ;;		_analogRead
  1642 ;;		_lcd_begin
  1643 ;;		_lcd_clear
  1644 ;;		_lcd_home
  1645 ;;		_G15_setAngleLimit
  1646 ;;		_G15_setTemperatureLimit
  1647 ;;		_G15_setVoltageLimit
  1648 ;;		_G15_setID
  1649 ;;		_G15_setAlarmLED
  1650 ;;		_G15_setAlarmShutDown
  1651 ;;		_G15_setBaudRate
  1652 ;;		_G15_factoryReset
  1653 ;;		_Shield2AMotor_waveDrive
  1654 ;;		_Shield2AMotor_fullDrive
  1655 ;;		_Shield2AMotor_halfStepDrive
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text6
  1660  001862                     __ptext6:
  1661                           	opt stack 0
  1662  001862                     _delay:
  1663                           	opt stack 24
  1664  001862                     l628:
  1665                           
  1666                           ;wiring.c: 46: _delay((unsigned long)((1)*(48000000/4000.0)));
  1667  001862  0E10               	movlw	16
  1668  001864  0101               	movlb	1	; () banked
  1669  001866  6F88               	movwf	??_delay& (0+255),b
  1670  001868  0E94               	movlw	148
  1671  00186A                     u6977:
  1672  00186A  2EE8               	decfsz	wreg,f,c
  1673  00186C  D7FE               	goto	u6977
  1674  00186E  2F88               	decfsz	??_delay& (0+255),f,b
  1675  001870  D7FC               	goto	u6977
  1676  001872  D000               	nop2	
  1677                           
  1678                           ;wiring.c: 47: } while(ms-- > 0);
  1679  001874  0101               	movlb	1	; () banked
  1680  001876  0784               	decf	delay@ms& (0+255),f,b
  1681  001878  0E00               	movlw	0
  1682  00187A  0101               	movlb	1	; () banked
  1683  00187C  5B85               	subwfb	(delay@ms+1)& (0+255),f,b
  1684  00187E  0101               	movlb	1	; () banked
  1685  001880  5B86               	subwfb	(delay@ms+2)& (0+255),f,b
  1686  001882  0101               	movlb	1	; () banked
  1687  001884  5B87               	subwfb	(delay@ms+3)& (0+255),f,b
  1688  001886  0101               	movlb	1	; () banked
  1689  001888  2984               	incf	delay@ms& (0+255),w,b
  1690  00188A  B4D8               	btfsc	status,2,c
  1691  00188C  2985               	incf	(delay@ms+1)& (0+255),w,b
  1692  00188E  B4D8               	btfsc	status,2,c
  1693  001890  2986               	incf	(delay@ms+2)& (0+255),w,b
  1694  001892  B4D8               	btfsc	status,2,c
  1695  001894  2987               	incf	(delay@ms+3)& (0+255),w,b
  1696  001896  B4D8               	btfsc	status,2,c
  1697                           
  1698                           ; BSR set to: 1
  1699                           
  1700                           ; BSR set to: 1
  1701  001898  0012               	return	
  1702  00189A  D7E3               	goto	l628
  1703  00189C                     __end_of_delay:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           prodh	equ	0xFF4
  1710                           prodl	equ	0xFF3
  1711                           intcon	equ	0xFF2
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           indf2	equ	0xFDF
  1717                           fsr2h	equ	0xFDA
  1718                           fsr2l	equ	0xFD9
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _init *****************
  1722 ;; Defined at:
  1723 ;;		line 57 in file "wiring.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, status,2
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    5
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text7
  1752  001818                     __ptext7:
  1753                           	opt stack 0
  1754  001818                     _init:
  1755                           	opt stack 25
  1756                           
  1757                           ;wiring.c: 61: (INTCONbits.GIE = 1);
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;incstack = 0
  1761  001818  8EF2               	bsf	intcon,7,c	;volatile
  1762                           
  1763                           ;wiring.c: 63: ADCON0 = 0x00;
  1764  00181A  0E00               	movlw	0
  1765  00181C  6EC2               	movwf	4034,c	;volatile
  1766                           
  1767                           ;wiring.c: 64: ADCON1 = 0x0F;
  1768  00181E  0E0F               	movlw	15
  1769  001820  6EC1               	movwf	4033,c	;volatile
  1770                           
  1771                           ;wiring.c: 65: ADCON2 = 0x96;
  1772  001822  0E96               	movlw	150
  1773  001824  6EC0               	movwf	4032,c	;volatile
  1774                           
  1775                           ;wiring.c: 67: PORTA = 0;
  1776  001826  0E00               	movlw	0
  1777  001828  6E80               	movwf	3968,c	;volatile
  1778                           
  1779                           ;wiring.c: 68: PORTB = 0;
  1780  00182A  0E00               	movlw	0
  1781  00182C  6E81               	movwf	3969,c	;volatile
  1782                           
  1783                           ;wiring.c: 69: PORTC = 0;
  1784  00182E  0E00               	movlw	0
  1785  001830  6E82               	movwf	3970,c	;volatile
  1786                           
  1787                           ;wiring.c: 70: PORTD = 0;
  1788  001832  0E00               	movlw	0
  1789  001834  6E83               	movwf	3971,c	;volatile
  1790                           
  1791                           ;wiring.c: 71: PORTE = 0;
  1792  001836  0E00               	movlw	0
  1793  001838  6E84               	movwf	3972,c	;volatile
  1794                           
  1795                           ;wiring.c: 74: TRISA = 0b111111;
  1796  00183A  0E3F               	movlw	63
  1797  00183C  6E92               	movwf	3986,c	;volatile
  1798                           
  1799                           ;wiring.c: 75: TRISB = 0b11111111;
  1800  00183E  6893               	setf	3987,c	;volatile
  1801                           
  1802                           ;wiring.c: 76: TRISC = 0b11111111;
  1803  001840  6894               	setf	3988,c	;volatile
  1804                           
  1805                           ;wiring.c: 77: TRISD = 0b11111111;
  1806  001842  6895               	setf	3989,c	;volatile
  1807                           
  1808                           ;wiring.c: 78: TRISE = 0b111;
  1809  001844  0E07               	movlw	7
  1810  001846  6E96               	movwf	3990,c	;volatile
  1811                           
  1812                           ;wiring.c: 81: TRISA4 = 0;
  1813  001848  9892               	bcf	3986,4,c	;volatile
  1814                           
  1815                           ;wiring.c: 82: LATA = 0;
  1816  00184A  0E00               	movlw	0
  1817  00184C  6E89               	movwf	3977,c	;volatile
  1818                           
  1819                           ;wiring.c: 85: T0CON = 0b11000101;
  1820  00184E  0EC5               	movlw	197
  1821  001850  6ED5               	movwf	4053,c	;volatile
  1822                           
  1823                           ;wiring.c: 86: TMR0IE = 1;
  1824  001852  8AF2               	bsf	intcon,5,c	;volatile
  1825                           
  1826                           ;wiring.c: 87: TMR0IP = 1;
  1827  001854  84F1               	bsf	intcon2,2,c	;volatile
  1828                           
  1829                           ;wiring.c: 89: PR2 = 0xFF;
  1830  001856  68CB               	setf	4043,c	;volatile
  1831                           
  1832                           ;wiring.c: 90: T2CON = 0x06;
  1833  001858  0E06               	movlw	6
  1834  00185A  6ECA               	movwf	4042,c	;volatile
  1835                           
  1836                           ;wiring.c: 92: PEIE = 1;
  1837  00185C  8CF2               	bsf	intcon,6,c	;volatile
  1838                           
  1839                           ;wiring.c: 93: IPEN = 1;
  1840  00185E  8ED0               	bsf	4048,7,c	;volatile
  1841  001860  0012               	return	
  1842  001862                     __end_of_init:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           intcon2	equ	0xFF1
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           indf2	equ	0xFDF
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _low_isr *****************
  1862 ;; Defined at:
  1863 ;;		line 133 in file "interrupt.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  c               1   20[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1879 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1880 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1881 ;;Total ram usage:       20 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    4
  1884 ;; This function calls:
  1885 ;;		_disableTimer
  1886 ;; This function is called by:
  1887 ;;		Interrupt level 1
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	intcodelo
  1892  001018                     __pintcodelo:
  1893                           	opt stack 0
  1894  001018                     _low_isr:
  1895                           	opt stack 23
  1896                           
  1897                           ;incstack = 0
  1898  001018  CFD8 F02E          	movff	status,??_low_isr+2
  1899  00101C  CFE8 F02F          	movff	wreg,??_low_isr+3
  1900  001020  CFE0 F030          	movff	bsr,??_low_isr+4
  1901  001024  CFFA F031          	movff	pclath,??_low_isr+5
  1902  001028  CFFB F032          	movff	pclatu,??_low_isr+6
  1903  00102C  CFE9 F033          	movff	fsr0l,??_low_isr+7
  1904  001030  CFEA F034          	movff	fsr0h,??_low_isr+8
  1905  001034  CFE1 F035          	movff	fsr1l,??_low_isr+9
  1906  001038  CFE2 F036          	movff	fsr1h,??_low_isr+10
  1907  00103C  CFD9 F037          	movff	fsr2l,??_low_isr+11
  1908  001040  CFDA F038          	movff	fsr2h,??_low_isr+12
  1909  001044  CFF3 F039          	movff	prodl,??_low_isr+13
  1910  001048  CFF4 F03A          	movff	prodh,??_low_isr+14
  1911  00104C  CFF6 F03B          	movff	tblptrl,??_low_isr+15
  1912  001050  CFF7 F03C          	movff	tblptrh,??_low_isr+16
  1913  001054  CFF8 F03D          	movff	tblptru,??_low_isr+17
  1914  001058  CFF5 F03E          	movff	tablat,??_low_isr+18
  1915                           
  1916                           ;interrupt.c: 135: if(TMR1IE && TMR1IF)
  1917  00105C  B09D               	btfsc	3997,0,c	;volatile
  1918  00105E  A09E               	btfss	3998,0,c	;volatile
  1919  001060  D034               	goto	i1l5987
  1920                           
  1921                           ;interrupt.c: 136: {
  1922                           ;interrupt.c: 137: TMR1IF = 0;
  1923  001062  909E               	bcf	3998,0,c	;volatile
  1924                           
  1925                           ;interrupt.c: 138: TMR1 = ocr;
  1926  001064  C015  FFCE         	movff	_ocr,4046	;volatile
  1927  001068  C016  FFCF         	movff	_ocr+1,4047	;volatile
  1928                           
  1929                           ;interrupt.c: 139: if(timer1_toggle_count != 0)
  1930  00106C  5008               	movf	_timer1_toggle_count+3,w,c	;volatile
  1931  00106E  1005               	iorwf	_timer1_toggle_count,w,c	;volatile
  1932  001070  1006               	iorwf	_timer1_toggle_count+1,w,c	;volatile
  1933  001072  1007               	iorwf	_timer1_toggle_count+2,w,c	;volatile
  1934  001074  B4D8               	btfsc	status,2,c
  1935  001076  D01D               	goto	i1l5983
  1936                           
  1937                           ;interrupt.c: 140: {
  1938                           ;interrupt.c: 142: *timer1_pin_port ^= timer1_pin_mask;
  1939  001078  C08C  FFD9         	movff	_timer1_pin_port,fsr2l
  1940  00107C  C08D  FFDA         	movff	_timer1_pin_port+1,fsr2h
  1941  001080  502A               	movf	_timer1_pin_mask,w,c	;volatile
  1942  001082  1ADF               	xorwf	indf2,f,c
  1943                           
  1944                           ;interrupt.c: 144: if(timer1_toggle_count > 0)
  1945  001084  5008               	movf	_timer1_toggle_count+3,w,c	;volatile
  1946  001086  0A80               	xorlw	128
  1947  001088  0F80               	addlw	128
  1948  00108A  E108               	bnz	i1u420_25
  1949  00108C  0E00               	movlw	0
  1950  00108E  5C07               	subwf	_timer1_toggle_count+2,w,c	;volatile
  1951  001090  E105               	bnz	i1u420_25
  1952  001092  0E00               	movlw	0
  1953  001094  5C06               	subwf	_timer1_toggle_count+1,w,c	;volatile
  1954  001096  E102               	bnz	i1u420_25
  1955  001098  0E01               	movlw	1
  1956  00109A  5C05               	subwf	_timer1_toggle_count,w,c	;volatile
  1957  00109C                     i1u420_25:
  1958  00109C  A0D8               	btfss	status,0,c
  1959  00109E  D015               	goto	i1l5987
  1960                           
  1961                           ;interrupt.c: 145: timer1_toggle_count--;
  1962  0010A0  0EFF               	movlw	255
  1963  0010A2  2605               	addwf	_timer1_toggle_count,f,c	;volatile
  1964  0010A4  0EFF               	movlw	255
  1965  0010A6  2206               	addwfc	_timer1_toggle_count+1,f,c	;volatile
  1966  0010A8  0EFF               	movlw	255
  1967  0010AA  2207               	addwfc	_timer1_toggle_count+2,f,c	;volatile
  1968  0010AC  0EFF               	movlw	255
  1969  0010AE  2208               	addwfc	_timer1_toggle_count+3,f,c	;volatile
  1970  0010B0  D00C               	goto	i1l5987
  1971  0010B2                     i1l5983:
  1972                           
  1973                           ;interrupt.c: 147: else
  1974                           ;interrupt.c: 148: {
  1975                           ;interrupt.c: 149: disableTimer(1);
  1976  0010B2  0E01               	movlw	1
  1977  0010B4  EC64  F00C         	call	_disableTimer
  1978                           
  1979                           ;interrupt.c: 150: *timer1_pin_port &= ~(timer1_pin_mask);
  1980  0010B8  502A               	movf	_timer1_pin_mask,w,c	;volatile
  1981  0010BA  0AFF               	xorlw	255
  1982  0010BC  6E2C               	movwf	??_low_isr& (0+255),c
  1983  0010BE  C08C  FFD9         	movff	_timer1_pin_port,fsr2l
  1984  0010C2  C08D  FFDA         	movff	_timer1_pin_port+1,fsr2h
  1985  0010C6  502C               	movf	??_low_isr,w,c
  1986  0010C8  16DF               	andwf	indf2,f,c
  1987  0010CA                     i1l5987:
  1988                           
  1989                           ;interrupt.c: 151: }
  1990                           ;interrupt.c: 152: }
  1991                           ;interrupt.c: 154: if(TXIE && TXIF)
  1992  0010CA  B89D               	btfsc	3997,4,c	;volatile
  1993  0010CC  A89E               	btfss	3998,4,c	;volatile
  1994  0010CE  D02E               	goto	i1l383
  1995                           
  1996                           ;interrupt.c: 155: {
  1997                           ;interrupt.c: 156: if(tx_buffer.head == tx_buffer.tail)
  1998  0010D0  0100               	movlb	0	; () banked
  1999  0010D2  EE20  F0D0         	lfsr	2,_tx_buffer+66	;volatile
  2000  0010D6  0100               	movlb	0	; () banked
  2001  0010D8  EE10  F0CE         	lfsr	1,_tx_buffer+64	;volatile
  2002  0010DC  52E6               	movf	postinc1,f,c
  2003  0010DE  52DE               	movf	postinc2,f,c
  2004  0010E0  50DD               	movf	postdec2,w,c
  2005  0010E2  18E5               	xorwf	postdec1,w,c
  2006  0010E4  CFDF FFE8          	movff	indf2,wreg
  2007  0010E8  B4D8               	btfsc	status,2,c
  2008  0010EA  18E7               	xorwf	indf1,w,c
  2009  0010EC  A4D8               	btfss	status,2,c
  2010  0010EE  D002               	goto	i1l5995
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;interrupt.c: 157: {
  2014                           ;interrupt.c: 159: TXIE = 0;
  2015  0010F0  989D               	bcf	3997,4,c	;volatile
  2016                           
  2017                           ;interrupt.c: 160: }
  2018  0010F2  D01C               	goto	i1l383
  2019  0010F4                     i1l5995:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;interrupt.c: 161: else
  2023                           ;interrupt.c: 162: {
  2024                           ;interrupt.c: 164: unsigned char c = tx_buffer.buffer[tx_buffer.tail];
  2025  0010F4  0100               	movlb	0	; () banked
  2026  0010F6  0E8E               	movlw	low _tx_buffer	;volatile
  2027  0010F8  0100               	movlb	0	; () banked
  2028  0010FA  25D0               	addwf	(_tx_buffer+66)& (0+255),w,b	;volatile
  2029  0010FC  6ED9               	movwf	fsr2l,c
  2030  0010FE  0100               	movlb	0	; () banked
  2031  001100  0E00               	movlw	high _tx_buffer	;volatile
  2032  001102  0100               	movlb	0	; () banked
  2033  001104  21D1               	addwfc	(_tx_buffer+67)& (0+255),w,b	;volatile
  2034  001106  6EDA               	movwf	fsr2h,c
  2035  001108  50DF               	movf	indf2,w,c
  2036  00110A  6E3F               	movwf	low_isr@c,c
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;interrupt.c: 165: tx_buffer.tail = (tx_buffer.tail + 1) % 64;
  2040  00110C  0E01               	movlw	1
  2041  00110E  0100               	movlb	0	; () banked
  2042  001110  25D0               	addwf	(_tx_buffer+66)& (0+255),w,b	;volatile
  2043  001112  6E2C               	movwf	??_low_isr& (0+255),c
  2044  001114  0E00               	movlw	0
  2045  001116  0100               	movlb	0	; () banked
  2046  001118  21D1               	addwfc	(_tx_buffer+67)& (0+255),w,b	;volatile
  2047  00111A  6E2D               	movwf	(??_low_isr+1)& (0+255),c
  2048  00111C  0E3F               	movlw	63
  2049  00111E  142C               	andwf	??_low_isr,w,c
  2050  001120  0100               	movlb	0	; () banked
  2051  001122  6FD0               	movwf	(_tx_buffer+66)& (0+255),b	;volatile
  2052  001124  0100               	movlb	0	; () banked
  2053  001126  6BD1               	clrf	(_tx_buffer+67)& (0+255),b	;volatile
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;interrupt.c: 167: TXREG = c;
  2057  001128  C03F  FFAD         	movff	low_isr@c,4013	;volatile
  2058  00112C                     i1l383:
  2059  00112C  C03E  FFF5         	movff	??_low_isr+18,tablat
  2060  001130  C03D  FFF8         	movff	??_low_isr+17,tblptru
  2061  001134  C03C  FFF7         	movff	??_low_isr+16,tblptrh
  2062  001138  C03B  FFF6         	movff	??_low_isr+15,tblptrl
  2063  00113C  C03A  FFF4         	movff	??_low_isr+14,prodh
  2064  001140  C039  FFF3         	movff	??_low_isr+13,prodl
  2065  001144  C038  FFDA         	movff	??_low_isr+12,fsr2h
  2066  001148  C037  FFD9         	movff	??_low_isr+11,fsr2l
  2067  00114C  C036  FFE2         	movff	??_low_isr+10,fsr1h
  2068  001150  C035  FFE1         	movff	??_low_isr+9,fsr1l
  2069  001154  C034  FFEA         	movff	??_low_isr+8,fsr0h
  2070  001158  C033  FFE9         	movff	??_low_isr+7,fsr0l
  2071  00115C  C032  FFFB         	movff	??_low_isr+6,pclatu
  2072  001160  C031  FFFA         	movff	??_low_isr+5,pclath
  2073  001164  C030  FFE0         	movff	??_low_isr+4,bsr
  2074  001168  C02F  FFE8         	movff	??_low_isr+3,wreg
  2075  00116C  C02E  FFD8         	movff	??_low_isr+2,status
  2076  001170  0010               	retfie	
  2077  001172                     __end_of_low_isr:
  2078                           	opt stack 0
  2079                           pclatu	equ	0xFFB
  2080                           pclath	equ	0xFFA
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           intcon	equ	0xFF2
  2088                           intcon2	equ	0xFF1
  2089                           postinc0	equ	0xFEE
  2090                           fsr0h	equ	0xFEA
  2091                           fsr0l	equ	0xFE9
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           postinc1	equ	0xFE6
  2095                           postdec1	equ	0xFE5
  2096                           fsr1h	equ	0xFE2
  2097                           fsr1l	equ	0xFE1
  2098                           bsr	equ	0xFE0
  2099                           indf2	equ	0xFDF
  2100                           postinc2	equ	0xFDE
  2101                           postdec2	equ	0xFDD
  2102                           fsr2h	equ	0xFDA
  2103                           fsr2l	equ	0xFD9
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _disableTimer *****************
  2107 ;; Defined at:
  2108 ;;		line 86 in file "Tone.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  _timer          1    wreg     unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  _timer          1    0[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0
  2123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2125 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2126 ;;Total ram usage:        1 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_low_isr
  2133 ;;		_noTone
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text9
  2138  0018C8                     __ptext9:
  2139                           	opt stack 0
  2140  0018C8                     _disableTimer:
  2141                           	opt stack 23
  2142                           
  2143                           ;incstack = 0
  2144                           ;disableTimer@_timer stored from wreg
  2145  0018C8  6E2B               	movwf	disableTimer@_timer,c
  2146                           
  2147                           ;Tone.c: 88: switch (_timer)
  2148  0018CA  D003               	goto	i1l5271
  2149  0018CC                     i1l530:
  2150                           
  2151                           ;Tone.c: 91: TMR1IE = 0;
  2152  0018CC  909D               	bcf	3997,0,c	;volatile
  2153                           
  2154                           ;Tone.c: 92: TMR1ON = 0;
  2155  0018CE  90CD               	bcf	4045,0,c	;volatile
  2156                           
  2157                           ;Tone.c: 93: break;
  2158  0018D0  D004               	goto	i1l532
  2159  0018D2                     i1l5271:
  2160  0018D2  502B               	movf	disableTimer@_timer,w,c
  2161                           
  2162                           ; Switch size 1, requested type "space"
  2163                           ; Number of cases is 1, Range of values is 1 to 1
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte            4     3 (average)
  2167                           ;	Chosen strategy is simple_byte
  2168  0018D4  0A01               	xorlw	1	; case 1
  2169  0018D6  B4D8               	btfsc	status,2,c
  2170  0018D8  D7F9               	goto	i1l530
  2171  0018DA                     i1l532:
  2172  0018DA  0012               	return	
  2173  0018DC                     __end_of_disableTimer:
  2174                           	opt stack 0
  2175                           pclatu	equ	0xFFB
  2176                           pclath	equ	0xFFA
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           intcon2	equ	0xFF1
  2185                           postinc0	equ	0xFEE
  2186                           fsr0h	equ	0xFEA
  2187                           fsr0l	equ	0xFE9
  2188                           wreg	equ	0xFE8
  2189                           indf1	equ	0xFE7
  2190                           postinc1	equ	0xFE6
  2191                           postdec1	equ	0xFE5
  2192                           fsr1h	equ	0xFE2
  2193                           fsr1l	equ	0xFE1
  2194                           bsr	equ	0xFE0
  2195                           indf2	equ	0xFDF
  2196                           postinc2	equ	0xFDE
  2197                           postdec2	equ	0xFDD
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function _high_isr *****************
  2203 ;; Defined at:
  2204 ;;		line 78 in file "interrupt.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  c               1   19[BANK0 ] unsigned char 
  2209 ;;  m               4   20[BANK0 ] unsigned long 
  2210 ;;  f               1   24[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2222 ;;      Temps:          0      14       0       0       0       0       0       0       0
  2223 ;;      Totals:         0      20       0       0       0       0       0       0       0
  2224 ;;Total ram usage:       20 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    2
  2227 ;; This function calls:
  2228 ;;		_SSerial_recv
  2229 ;;		_store_char
  2230 ;; This function is called by:
  2231 ;;		Interrupt level 2
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	intcode
  2236  001008                     __pintcode:
  2237                           	opt stack 0
  2238  001008                     _high_isr:
  2239                           	opt stack 23
  2240                           
  2241                           ;incstack = 0
  2242  001008  CFFA F0DD          	movff	pclath,??_high_isr
  2243  00100C  CFFB F0DE          	movff	pclatu,??_high_isr+1
  2244  001010  CFE9 F0DF          	movff	fsr0l,??_high_isr+2
  2245  001014  ED60  F009         	call	int_func,f	;refresh shadow registers
  2246                           pclatu	equ	0xFFB
  2247                           pclath	equ	0xFFA
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           intcon2	equ	0xFF1
  2256                           postinc0	equ	0xFEE
  2257                           fsr0h	equ	0xFEA
  2258                           fsr0l	equ	0xFE9
  2259                           wreg	equ	0xFE8
  2260                           indf1	equ	0xFE7
  2261                           postinc1	equ	0xFE6
  2262                           postdec1	equ	0xFE5
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           bsr	equ	0xFE0
  2266                           indf2	equ	0xFDF
  2267                           postinc2	equ	0xFDE
  2268                           postdec2	equ	0xFDD
  2269                           fsr2h	equ	0xFDA
  2270                           fsr2l	equ	0xFD9
  2271                           status	equ	0xFD8
  2272                           
  2273                           	psect	intcode_body
  2274  0012C0                     __pintcode_body:
  2275                           	opt stack 23
  2276  0012C0                     int_func:
  2277                           	opt stack 23
  2278  0012C0  0006               	pop		; remove dummy address from shadow register refresh
  2279  0012C2  CFEA F0E0          	movff	fsr0h,??_high_isr+3
  2280  0012C6  CFE1 F0E1          	movff	fsr1l,??_high_isr+4
  2281  0012CA  CFE2 F0E2          	movff	fsr1h,??_high_isr+5
  2282  0012CE  CFD9 F0E3          	movff	fsr2l,??_high_isr+6
  2283  0012D2  CFDA F0E4          	movff	fsr2h,??_high_isr+7
  2284  0012D6  CFF3 F0E5          	movff	prodl,??_high_isr+8
  2285  0012DA  CFF4 F0E6          	movff	prodh,??_high_isr+9
  2286  0012DE  CFF6 F0E7          	movff	tblptrl,??_high_isr+10
  2287  0012E2  CFF7 F0E8          	movff	tblptrh,??_high_isr+11
  2288  0012E6  CFF8 F0E9          	movff	tblptru,??_high_isr+12
  2289  0012EA  CFF5 F0EA          	movff	tablat,??_high_isr+13
  2290                           
  2291                           ;interrupt.c: 80: if(TMR0IF)
  2292  0012EE  A4F2               	btfss	intcon,2,c	;volatile
  2293  0012F0  D03D               	goto	i2l7757
  2294                           
  2295                           ;interrupt.c: 81: {
  2296                           ;interrupt.c: 82: TMR0IF = 0;
  2297  0012F2  94F2               	bcf	intcon,2,c	;volatile
  2298                           
  2299                           ;interrupt.c: 84: unsigned long m = timer0_millis;
  2300  0012F4  C001  F0EC         	movff	_timer0_millis,high_isr@m	;volatile
  2301  0012F8  C002  F0ED         	movff	_timer0_millis+1,high_isr@m+1	;volatile
  2302  0012FC  C003  F0EE         	movff	_timer0_millis+2,high_isr@m+2	;volatile
  2303  001300  C004  F0EF         	movff	_timer0_millis+3,high_isr@m+3	;volatile
  2304                           
  2305                           ;interrupt.c: 85: unsigned char f = timer0_fract;
  2306  001304  C029  F0F0         	movff	_timer0_fract,high_isr@f
  2307                           
  2308                           ;interrupt.c: 87: m += ((((64 * 256)/(48000000/4/1000000L))) / 1000);
  2309  001308  0E01               	movlw	1
  2310  00130A  0100               	movlb	0	; () banked
  2311  00130C  27EC               	addwf	high_isr@m& (0+255),f,b
  2312  00130E  0E00               	movlw	0
  2313  001310  0100               	movlb	0	; () banked
  2314  001312  23ED               	addwfc	(high_isr@m+1)& (0+255),f,b
  2315  001314  0100               	movlb	0	; () banked
  2316  001316  23EE               	addwfc	(high_isr@m+2)& (0+255),f,b
  2317  001318  0100               	movlb	0	; () banked
  2318  00131A  23EF               	addwfc	(high_isr@m+3)& (0+255),f,b
  2319                           
  2320                           ;interrupt.c: 88: f += (((((64 * 256)/(48000000/4/1000000L))) % 1000) >> 3);
  2321  00131C  0E2D               	movlw	45
  2322  00131E  0100               	movlb	0	; () banked
  2323  001320  27F0               	addwf	high_isr@f& (0+255),f,b
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;interrupt.c: 89: if(f >= (1000 >> 3))
  2327  001322  0E7C               	movlw	124
  2328  001324  0100               	movlb	0	; () banked
  2329  001326  65F0               	cpfsgt	high_isr@f& (0+255),b
  2330  001328  D00D               	goto	i2l7753
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;interrupt.c: 90: {
  2334                           ;interrupt.c: 91: f -= (1000 >> 3);
  2335  00132A  0E7D               	movlw	125
  2336  00132C  0100               	movlb	0	; () banked
  2337  00132E  5FF0               	subwf	high_isr@f& (0+255),f,b
  2338                           
  2339                           ;interrupt.c: 92: m += 1;
  2340  001330  0E01               	movlw	1
  2341  001332  0100               	movlb	0	; () banked
  2342  001334  27EC               	addwf	high_isr@m& (0+255),f,b
  2343  001336  0E00               	movlw	0
  2344  001338  0100               	movlb	0	; () banked
  2345  00133A  23ED               	addwfc	(high_isr@m+1)& (0+255),f,b
  2346  00133C  0100               	movlb	0	; () banked
  2347  00133E  23EE               	addwfc	(high_isr@m+2)& (0+255),f,b
  2348  001340  0100               	movlb	0	; () banked
  2349  001342  23EF               	addwfc	(high_isr@m+3)& (0+255),f,b
  2350  001344                     i2l7753:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;interrupt.c: 93: }
  2354                           ;interrupt.c: 95: timer0_fract = f;
  2355  001344  C0F0  F029         	movff	high_isr@f,_timer0_fract
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;interrupt.c: 96: timer0_millis = m;
  2359  001348  C0EC  F001         	movff	high_isr@m,_timer0_millis	;volatile
  2360  00134C  C0ED  F002         	movff	high_isr@m+1,_timer0_millis+1	;volatile
  2361  001350  C0EE  F003         	movff	high_isr@m+2,_timer0_millis+2	;volatile
  2362  001354  C0EF  F004         	movff	high_isr@m+3,_timer0_millis+3	;volatile
  2363                           
  2364                           ;interrupt.c: 97: timer0_overflow_count++;
  2365  001358  0E01               	movlw	1
  2366  00135A  0100               	movlb	0	; () banked
  2367  00135C  277A               	addwf	_timer0_overflow_count& (0+255),f,b	;volatile
  2368  00135E  0E00               	movlw	0
  2369  001360  0100               	movlb	0	; () banked
  2370  001362  237B               	addwfc	(_timer0_overflow_count+1)& (0+255),f,b	;volatile
  2371  001364  0100               	movlb	0	; () banked
  2372  001366  237C               	addwfc	(_timer0_overflow_count+2)& (0+255),f,b	;volatile
  2373  001368  0100               	movlb	0	; () banked
  2374  00136A  237D               	addwfc	(_timer0_overflow_count+3)& (0+255),f,b	;volatile
  2375  00136C                     i2l7757:
  2376                           
  2377                           ;interrupt.c: 98: }
  2378                           ;interrupt.c: 100: if(RCIE && RCIF)
  2379  00136C  BA9D               	btfsc	3997,5,c	;volatile
  2380  00136E  AA9E               	btfss	3998,5,c	;volatile
  2381  001370  D00C               	goto	i2l7765
  2382                           
  2383                           ;interrupt.c: 101: {
  2384                           ;interrupt.c: 102: unsigned char c = RCREG;
  2385  001372  CFAE F0EB          	movff	4014,high_isr@c	;volatile
  2386                           
  2387                           ;interrupt.c: 103: store_char(c, &rx_buffer);
  2388  001376  0101               	movlb	1	; () banked
  2389  001378  0E01               	movlw	high _rx_buffer	;volatile
  2390  00137A  6E41               	movwf	store_char@buffer+1,c
  2391  00137C  0101               	movlb	1	; () banked
  2392  00137E  0E40               	movlw	low _rx_buffer	;volatile
  2393  001380  6E40               	movwf	store_char@buffer,c
  2394  001382  0100               	movlb	0	; () banked
  2395  001384  51EB               	movf	high_isr@c& (0+255),w,b
  2396  001386  EC4A  F00B         	call	_store_char
  2397  00138A                     i2l7765:
  2398                           
  2399                           ;interrupt.c: 104: }
  2400                           ;interrupt.c: 106: if(INT0IE && INT0IF)
  2401  00138A  B8F2               	btfsc	intcon,4,c	;volatile
  2402  00138C  A2F2               	btfss	intcon,1,c	;volatile
  2403  00138E  D001               	goto	i2l365
  2404                           
  2405                           ;interrupt.c: 109: INT0IF = 0;
  2406  001390  92F2               	bcf	intcon,1,c	;volatile
  2407  001392                     i2l365:
  2408                           
  2409                           ;interrupt.c: 110: }
  2410                           ;interrupt.c: 112: if(INT1IE && INT1IF)
  2411  001392  B6F0               	btfsc	intcon3,3,c	;volatile
  2412  001394  A0F0               	btfss	intcon3,0,c	;volatile
  2413  001396  D001               	goto	i2l367
  2414                           
  2415                           ;interrupt.c: 115: INT1IF = 0;
  2416                           
  2417                           ;interrupt.c: 113: {
  2418                           ;interrupt.c: 114: if(intFunc[1]) intFunc[1]();
  2419  001398  90F0               	bcf	intcon3,0,c	;volatile
  2420  00139A                     i2l367:
  2421                           
  2422                           ;interrupt.c: 116: }
  2423                           ;interrupt.c: 118: if(INT2IE && INT2IF)
  2424  00139A  B8F0               	btfsc	intcon3,4,c	;volatile
  2425  00139C  A2F0               	btfss	intcon3,1,c	;volatile
  2426  00139E  D005               	goto	i2l373
  2427                           
  2428                           ;interrupt.c: 119: {
  2429                           ;interrupt.c: 120: if(INTFlag)
  2430  0013A0  5018               	movf	_INTFlag,w,c
  2431  0013A2  B4D8               	btfsc	status,2,c
  2432                           
  2433                           ;interrupt.c: 125: else
  2434                           ;interrupt.c: 126: {
  2435                           ;interrupt.c: 127: SSerial_recv();
  2436                           
  2437                           ;interrupt.c: 124: }
  2438                           
  2439                           ;interrupt.c: 123: INT2IF = 0;
  2440                           
  2441                           ;interrupt.c: 121: {
  2442                           ;interrupt.c: 122: if(intFunc[2]) intFunc[2]();
  2443  0013A4  ECF2  F009         	call	_SSerial_recv	;wreg free
  2444                           
  2445                           ;interrupt.c: 128: INT2IF = 0;
  2446  0013A8  92F0               	bcf	intcon3,1,c	;volatile
  2447  0013AA                     i2l373:
  2448  0013AA  C0EA  FFF5         	movff	??_high_isr+13,tablat
  2449  0013AE  C0E9  FFF8         	movff	??_high_isr+12,tblptru
  2450  0013B2  C0E8  FFF7         	movff	??_high_isr+11,tblptrh
  2451  0013B6  C0E7  FFF6         	movff	??_high_isr+10,tblptrl
  2452  0013BA  C0E6  FFF4         	movff	??_high_isr+9,prodh
  2453  0013BE  C0E5  FFF3         	movff	??_high_isr+8,prodl
  2454  0013C2  C0E4  FFDA         	movff	??_high_isr+7,fsr2h
  2455  0013C6  C0E3  FFD9         	movff	??_high_isr+6,fsr2l
  2456  0013CA  C0E2  FFE2         	movff	??_high_isr+5,fsr1h
  2457  0013CE  C0E1  FFE1         	movff	??_high_isr+4,fsr1l
  2458  0013D2  C0E0  FFEA         	movff	??_high_isr+3,fsr0h
  2459  0013D6  C0DF  FFE9         	movff	??_high_isr+2,fsr0l
  2460  0013DA  C0DE  FFFB         	movff	??_high_isr+1,pclatu
  2461  0013DE  C0DD  FFFA         	movff	??_high_isr,pclath
  2462  0013E2  0011               	retfie		f
  2463  0013E4                     __end_of_high_isr:
  2464                           	opt stack 0
  2465                           pclatu	equ	0xFFB
  2466                           pclath	equ	0xFFA
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           intcon2	equ	0xFF1
  2475                           intcon3	equ	0xFF0
  2476                           postinc0	equ	0xFEE
  2477                           fsr0h	equ	0xFEA
  2478                           fsr0l	equ	0xFE9
  2479                           wreg	equ	0xFE8
  2480                           indf1	equ	0xFE7
  2481                           postinc1	equ	0xFE6
  2482                           postdec1	equ	0xFE5
  2483                           fsr1h	equ	0xFE2
  2484                           fsr1l	equ	0xFE1
  2485                           bsr	equ	0xFE0
  2486                           indf2	equ	0xFDF
  2487                           postinc2	equ	0xFDE
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _store_char *****************
  2494 ;; Defined at:
  2495 ;;		line 21 in file "HardwareSerial.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  c               1    wreg     unsigned char 
  2498 ;;  buffer          2   21[COMRAM] PTR volatile struct .
  2499 ;;		 -> rx_buffer(68), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  c               1   25[COMRAM] unsigned char 
  2502 ;;  i               2   26[COMRAM] int 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0
  2513 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2514 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2515 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2516 ;;Total ram usage:        7 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_high_isr
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text11
  2526  001694                     __ptext11:
  2527                           	opt stack 0
  2528  001694                     _store_char:
  2529                           	opt stack 24
  2530                           
  2531                           ;incstack = 0
  2532                           ;store_char@c stored from wreg
  2533  001694  6E44               	movwf	store_char@c,c
  2534                           
  2535                           ;HardwareSerial.c: 23: int i = (unsigned int)(buffer->head + 1) % 64;
  2536  001696  EE20 F040          	lfsr	2,64
  2537  00169A  5040               	movf	store_char@buffer,w,c
  2538  00169C  26D9               	addwf	fsr2l,f,c
  2539  00169E  5041               	movf	store_char@buffer+1,w,c
  2540  0016A0  22DA               	addwfc	fsr2h,f,c
  2541  0016A2  CFDE F042          	movff	postinc2,??_store_char
  2542  0016A6  CFDD F043          	movff	postdec2,??_store_char+1
  2543  0016AA  0E01               	movlw	1
  2544  0016AC  2642               	addwf	??_store_char,f,c
  2545  0016AE  0E00               	movlw	0
  2546  0016B0  2243               	addwfc	??_store_char+1,f,c
  2547  0016B2  0E3F               	movlw	63
  2548  0016B4  1442               	andwf	??_store_char,w,c
  2549  0016B6  6E45               	movwf	store_char@i,c
  2550  0016B8  6A46               	clrf	store_char@i+1,c
  2551                           
  2552                           ;HardwareSerial.c: 29: if(i != buffer->tail) {
  2553  0016BA  EE20 F042          	lfsr	2,66
  2554  0016BE  5040               	movf	store_char@buffer,w,c
  2555  0016C0  26D9               	addwf	fsr2l,f,c
  2556  0016C2  5041               	movf	store_char@buffer+1,w,c
  2557  0016C4  22DA               	addwfc	fsr2h,f,c
  2558  0016C6  52DE               	movf	postinc2,f,c
  2559  0016C8  5046               	movf	store_char@i+1,w,c
  2560  0016CA  18DD               	xorwf	postdec2,w,c
  2561  0016CC  C045  FFE8         	movff	store_char@i,wreg
  2562  0016D0  B4D8               	btfsc	status,2,c
  2563  0016D2  18DF               	xorwf	indf2,w,c
  2564  0016D4  B4D8               	btfsc	status,2,c
  2565  0016D6  D01C               	goto	i2l98
  2566                           
  2567                           ;HardwareSerial.c: 30: buffer->buffer[buffer->head] = c;
  2568  0016D8  EE20 F040          	lfsr	2,64
  2569  0016DC  5040               	movf	store_char@buffer,w,c
  2570  0016DE  26D9               	addwf	fsr2l,f,c
  2571  0016E0  5041               	movf	store_char@buffer+1,w,c
  2572  0016E2  22DA               	addwfc	fsr2h,f,c
  2573  0016E4  CFDE F042          	movff	postinc2,??_store_char
  2574  0016E8  CFDD F043          	movff	postdec2,??_store_char+1
  2575  0016EC  5042               	movf	??_store_char,w,c
  2576  0016EE  2440               	addwf	store_char@buffer,w,c
  2577  0016F0  6ED9               	movwf	fsr2l,c
  2578  0016F2  5043               	movf	??_store_char+1,w,c
  2579  0016F4  2041               	addwfc	store_char@buffer+1,w,c
  2580  0016F6  6EDA               	movwf	fsr2h,c
  2581  0016F8  C044  FFDF         	movff	store_char@c,indf2
  2582                           
  2583                           ;HardwareSerial.c: 31: buffer->head = i;
  2584  0016FC  EE20 F040          	lfsr	2,64
  2585  001700  5040               	movf	store_char@buffer,w,c
  2586  001702  26D9               	addwf	fsr2l,f,c
  2587  001704  5041               	movf	store_char@buffer+1,w,c
  2588  001706  22DA               	addwfc	fsr2h,f,c
  2589  001708  C045  FFDE         	movff	store_char@i,postinc2
  2590  00170C  C046  FFDD         	movff	store_char@i+1,postdec2
  2591  001710                     i2l98:
  2592  001710  0012               	return	
  2593  001712                     __end_of_store_char:
  2594                           	opt stack 0
  2595                           pclatu	equ	0xFFB
  2596                           pclath	equ	0xFFA
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           intcon2	equ	0xFF1
  2605                           intcon3	equ	0xFF0
  2606                           postinc0	equ	0xFEE
  2607                           fsr0h	equ	0xFEA
  2608                           fsr0l	equ	0xFE9
  2609                           wreg	equ	0xFE8
  2610                           indf1	equ	0xFE7
  2611                           postinc1	equ	0xFE6
  2612                           postdec1	equ	0xFE5
  2613                           fsr1h	equ	0xFE2
  2614                           fsr1l	equ	0xFE1
  2615                           bsr	equ	0xFE0
  2616                           indf2	equ	0xFDF
  2617                           postinc2	equ	0xFDE
  2618                           postdec2	equ	0xFDD
  2619                           fsr2h	equ	0xFDA
  2620                           fsr2l	equ	0xFD9
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _SSerial_recv *****************
  2624 ;; Defined at:
  2625 ;;		line 45 in file "SoftwareSerial.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  noti            1    0[BANK0 ] unsigned char 
  2630 ;;  i               1    4[BANK0 ] unsigned char 
  2631 ;;  d               1    3[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2643 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         2       5       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        7 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		_SSerial_rx_pin_read
  2650 ;;		_digitalToggle
  2651 ;;		_tunedDelay
  2652 ;; This function is called by:
  2653 ;;		_high_isr
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text12
  2658  0013E4                     __ptext12:
  2659                           	opt stack 0
  2660  0013E4                     _SSerial_recv:
  2661                           	opt stack 23
  2662                           
  2663                           ;SoftwareSerial.c: 47: UINT8 d = 0;
  2664                           
  2665                           ;incstack = 0
  2666  0013E4  0E00               	movlw	0
  2667  0013E6  0100               	movlb	0	; () banked
  2668  0013E8  6FDB               	movwf	SSerial_recv@d& (0+255),b
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;SoftwareSerial.c: 49: if(_inverse_logic ? SSerial_rx_pin_read() : !SSerial_rx_pin_read(
      +                          ))
  2672  0013EA  500A               	movf	__inverse_logic+1,w,c
  2673  0013EC  1009               	iorwf	__inverse_logic,w,c
  2674  0013EE  A4D8               	btfss	status,2,c
  2675  0013F0  D007               	goto	i2l7295
  2676                           
  2677                           ; BSR set to: 0
  2678  0013F2  EC84  F00C         	call	_SSerial_rx_pin_read	;wreg free
  2679  0013F6  0900               	iorlw	0
  2680  0013F8  0E00               	movlw	0
  2681  0013FA  B4D8               	btfsc	status,2,c
  2682  0013FC  0E01               	movlw	1
  2683  0013FE  D004               	goto	L3
  2684  001400                     i2l7295:
  2685                           
  2686                           ; BSR set to: 0
  2687  001400  EC84  F00C         	call	_SSerial_rx_pin_read	;wreg free
  2688  001404  6E42               	movwf	??_SSerial_recv& (0+255),c
  2689  001406  5042               	movf	??_SSerial_recv,w,c
  2690  001408                     L3:
  2691  001408  0100               	movlb	0	; () banked
  2692  00140A  6FD9               	movwf	_SSerial_recv$1296& (0+255),b
  2693  00140C  0100               	movlb	0	; () banked
  2694  00140E  6BDA               	clrf	(_SSerial_recv$1296+1)& (0+255),b
  2695                           
  2696                           ; BSR set to: 0
  2697                           
  2698                           ; BSR set to: 0
  2699  001410  0100               	movlb	0	; () banked
  2700  001412  51DA               	movf	(_SSerial_recv$1296+1)& (0+255),w,b
  2701  001414  11D9               	iorwf	_SSerial_recv$1296& (0+255),w,b
  2702  001416  B4D8               	btfsc	status,2,c
  2703  001418  D06B               	goto	i2l1335
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;SoftwareSerial.c: 50: {
  2707                           ;SoftwareSerial.c: 51: tunedDelay(_rx_delay_centering);
  2708  00141A  C084  F040         	movff	__rx_delay_centering,tunedDelay@delay
  2709  00141E  C085  F041         	movff	__rx_delay_centering+1,tunedDelay@delay+1
  2710  001422  EC6E  F00C         	call	_tunedDelay	;wreg free
  2711                           
  2712                           ;SoftwareSerial.c: 52: digitalToggle(25);
  2713  001426  0E19               	movlw	25
  2714  001428  ECE6  F00B         	call	_digitalToggle
  2715                           
  2716                           ;SoftwareSerial.c: 54: for(UINT8 i = 1; i; i <<= 1)
  2717  00142C  0E01               	movlw	1
  2718  00142E  0100               	movlb	0	; () banked
  2719  001430  6FDC               	movwf	SSerial_recv@i& (0+255),b
  2720  001432  D01F               	goto	i2l7317
  2721  001434                     i2l7305:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;SoftwareSerial.c: 55: {
  2725                           ;SoftwareSerial.c: 56: tunedDelay(_rx_delay_intrabit);
  2726  001434  C086  F040         	movff	__rx_delay_intrabit,tunedDelay@delay
  2727  001438  C087  F041         	movff	__rx_delay_intrabit+1,tunedDelay@delay+1
  2728  00143C  EC6E  F00C         	call	_tunedDelay	;wreg free
  2729                           
  2730                           ;SoftwareSerial.c: 57: digitalToggle(25);
  2731  001440  0E19               	movlw	25
  2732  001442  ECE6  F00B         	call	_digitalToggle
  2733                           
  2734                           ;SoftwareSerial.c: 58: UINT8 noti = ~i;
  2735  001446  0100               	movlb	0	; () banked
  2736  001448  51DC               	movf	SSerial_recv@i& (0+255),w,b
  2737  00144A  0AFF               	xorlw	255
  2738  00144C  0100               	movlb	0	; () banked
  2739  00144E  6FD8               	movwf	SSerial_recv@noti& (0+255),b
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;SoftwareSerial.c: 59: if(SSerial_rx_pin_read())
  2743  001450  EC84  F00C         	call	_SSerial_rx_pin_read	;wreg free
  2744  001454  0900               	iorlw	0
  2745  001456  B4D8               	btfsc	status,2,c
  2746  001458  D005               	goto	i2l7315
  2747                           
  2748                           ;SoftwareSerial.c: 60: d |= i;
  2749  00145A  0100               	movlb	0	; () banked
  2750  00145C  51DC               	movf	SSerial_recv@i& (0+255),w,b
  2751  00145E  0100               	movlb	0	; () banked
  2752  001460  13DB               	iorwf	SSerial_recv@d& (0+255),f,b
  2753  001462  D004               	goto	i2l1330
  2754  001464                     i2l7315:
  2755                           
  2756                           ;SoftwareSerial.c: 61: else
  2757                           ;SoftwareSerial.c: 62: d &= noti;
  2758  001464  0100               	movlb	0	; () banked
  2759  001466  51D8               	movf	SSerial_recv@noti& (0+255),w,b
  2760  001468  0100               	movlb	0	; () banked
  2761  00146A  17DB               	andwf	SSerial_recv@d& (0+255),f,b
  2762  00146C                     i2l1330:
  2763                           
  2764                           ; BSR set to: 0
  2765  00146C  0100               	movlb	0	; () banked
  2766  00146E  90D8               	bcf	status,0,c
  2767  001470  37DC               	rlcf	SSerial_recv@i& (0+255),f,b
  2768  001472                     i2l7317:
  2769                           
  2770                           ; BSR set to: 0
  2771  001472  0100               	movlb	0	; () banked
  2772  001474  67DC               	tstfsz	SSerial_recv@i& (0+255),b
  2773  001476  D7DE               	goto	i2l7305
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;SoftwareSerial.c: 63: }
  2777                           ;SoftwareSerial.c: 66: tunedDelay(_rx_delay_stopbit);
  2778                           
  2779                           ; BSR set to: 0
  2780  001478  C088  F040         	movff	__rx_delay_stopbit,tunedDelay@delay
  2781  00147C  C089  F041         	movff	__rx_delay_stopbit+1,tunedDelay@delay+1
  2782  001480  EC6E  F00C         	call	_tunedDelay	;wreg free
  2783                           
  2784                           ;SoftwareSerial.c: 67: digitalToggle(25);
  2785  001484  0E19               	movlw	25
  2786  001486  ECE6  F00B         	call	_digitalToggle
  2787                           
  2788                           ;SoftwareSerial.c: 69: if(_inverse_logic)
  2789  00148A  500A               	movf	__inverse_logic+1,w,c
  2790  00148C  1009               	iorwf	__inverse_logic,w,c
  2791  00148E  B4D8               	btfsc	status,2,c
  2792  001490  D002               	goto	i2l7327
  2793                           
  2794                           ;SoftwareSerial.c: 70: d = ~d;
  2795  001492  0100               	movlb	0	; () banked
  2796  001494  1FDB               	comf	SSerial_recv@d& (0+255),f,b
  2797  001496                     i2l7327:
  2798                           
  2799                           ;SoftwareSerial.c: 73: if((_receive_buffer_tail + 1) % 64 != _receive_buffer_head)
  2800  001496  0E01               	movlw	1
  2801  001498  240D               	addwf	__receive_buffer_tail,w,c	;volatile
  2802  00149A  6E42               	movwf	??_SSerial_recv& (0+255),c
  2803  00149C  0E00               	movlw	0
  2804  00149E  200E               	addwfc	__receive_buffer_tail+1,w,c	;volatile
  2805  0014A0  6E43               	movwf	(??_SSerial_recv+1)& (0+255),c
  2806  0014A2  0E3F               	movlw	63
  2807  0014A4  1642               	andwf	??_SSerial_recv,f,c
  2808  0014A6  0E00               	movlw	0
  2809  0014A8  1643               	andwf	??_SSerial_recv+1,f,c
  2810  0014AA  500C               	movf	__receive_buffer_head+1,w,c	;volatile
  2811  0014AC  1843               	xorwf	??_SSerial_recv+1,w,c
  2812  0014AE  E102               	bnz	i2u557_45
  2813  0014B0  500B               	movf	__receive_buffer_head,w,c	;volatile
  2814  0014B2  1842               	xorwf	??_SSerial_recv,w,c
  2815  0014B4                     i2u557_45:
  2816  0014B4  B4D8               	btfsc	status,2,c
  2817  0014B6  D016               	goto	i2l7333
  2818                           
  2819                           ;SoftwareSerial.c: 74: {
  2820                           ;SoftwareSerial.c: 76: _receive_buffer[_receive_buffer_tail] = d;
  2821  0014B8  0101               	movlb	1	; () banked
  2822  0014BA  0E00               	movlw	low __receive_buffer
  2823  0014BC  240D               	addwf	__receive_buffer_tail,w,c	;volatile
  2824  0014BE  6ED9               	movwf	fsr2l,c
  2825  0014C0  0101               	movlb	1	; () banked
  2826  0014C2  0E01               	movlw	high __receive_buffer
  2827  0014C4  200E               	addwfc	__receive_buffer_tail+1,w,c	;volatile
  2828  0014C6  6EDA               	movwf	fsr2h,c
  2829  0014C8  0100               	movlb	0	; () banked
  2830  0014CA  C0DB  FFDF         	movff	SSerial_recv@d,indf2
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;SoftwareSerial.c: 77: _receive_buffer_tail = (_receive_buffer_tail + 1) % 64;
  2834  0014CE  0E01               	movlw	1
  2835  0014D0  240D               	addwf	__receive_buffer_tail,w,c	;volatile
  2836  0014D2  6E42               	movwf	??_SSerial_recv& (0+255),c
  2837  0014D4  0E00               	movlw	0
  2838  0014D6  200E               	addwfc	__receive_buffer_tail+1,w,c	;volatile
  2839  0014D8  6E43               	movwf	(??_SSerial_recv+1)& (0+255),c
  2840  0014DA  0E3F               	movlw	63
  2841  0014DC  1442               	andwf	??_SSerial_recv,w,c
  2842  0014DE  6E0D               	movwf	__receive_buffer_tail,c	;volatile
  2843  0014E0  6A0E               	clrf	__receive_buffer_tail+1,c	;volatile
  2844                           
  2845                           ;SoftwareSerial.c: 78: }
  2846  0014E2  D006               	goto	i2l1335
  2847  0014E4                     i2l7333:
  2848                           
  2849                           ;SoftwareSerial.c: 79: else
  2850                           ;SoftwareSerial.c: 80: {
  2851                           ;SoftwareSerial.c: 82: _buffer_overflow = 1;
  2852  0014E4  0E00               	movlw	0
  2853  0014E6  0100               	movlb	0	; () banked
  2854  0014E8  6F81               	movwf	(__buffer_overflow+1)& (0+255),b
  2855  0014EA  0E01               	movlw	1
  2856  0014EC  0100               	movlb	0	; () banked
  2857  0014EE  6F80               	movwf	__buffer_overflow& (0+255),b
  2858  0014F0                     i2l1335:
  2859                           
  2860                           ; BSR set to: 0
  2861  0014F0  0012               	return	
  2862  0014F2                     __end_of_SSerial_recv:
  2863                           	opt stack 0
  2864                           pclatu	equ	0xFFB
  2865                           pclath	equ	0xFFA
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           prodh	equ	0xFF4
  2871                           prodl	equ	0xFF3
  2872                           intcon	equ	0xFF2
  2873                           intcon2	equ	0xFF1
  2874                           intcon3	equ	0xFF0
  2875                           postinc0	equ	0xFEE
  2876                           fsr0h	equ	0xFEA
  2877                           fsr0l	equ	0xFE9
  2878                           wreg	equ	0xFE8
  2879                           indf1	equ	0xFE7
  2880                           postinc1	equ	0xFE6
  2881                           postdec1	equ	0xFE5
  2882                           fsr1h	equ	0xFE2
  2883                           fsr1l	equ	0xFE1
  2884                           bsr	equ	0xFE0
  2885                           indf2	equ	0xFDF
  2886                           postinc2	equ	0xFDE
  2887                           postdec2	equ	0xFDD
  2888                           fsr2h	equ	0xFDA
  2889                           fsr2l	equ	0xFD9
  2890                           status	equ	0xFD8
  2891                           
  2892 ;; *************** function _tunedDelay *****************
  2893 ;; Defined at:
  2894 ;;		line 38 in file "SoftwareSerial.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  delay           2   21[COMRAM] unsigned short 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;		None               void
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2908 ;;      Params:         2       0       0       0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2911 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2912 ;;Total ram usage:        2 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_SSerial_recv
  2918 ;;		_SSerial_begin
  2919 ;;		_SSerial_write
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text13
  2924  0018DC                     __ptext13:
  2925                           	opt stack 0
  2926  0018DC                     _tunedDelay:
  2927                           	opt stack 23
  2928  0018DC                     i2l1317:
  2929                           
  2930                           ;SoftwareSerial.c: 41: delay--;
  2931  0018DC  0640               	decf	tunedDelay@delay,f,c
  2932  0018DE  A0D8               	btfss	status,0,c
  2933  0018E0  0641               	decf	tunedDelay@delay+1,f,c
  2934                           
  2935                           ;SoftwareSerial.c: 42: } while(delay);
  2936  0018E2  5041               	movf	tunedDelay@delay+1,w,c
  2937  0018E4  1040               	iorwf	tunedDelay@delay,w,c
  2938  0018E6  B4D8               	btfsc	status,2,c
  2939  0018E8  0012               	return	
  2940  0018EA  D7F8               	goto	i2l1317
  2941  0018EC                     __end_of_tunedDelay:
  2942                           	opt stack 0
  2943                           pclatu	equ	0xFFB
  2944                           pclath	equ	0xFFA
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           intcon	equ	0xFF2
  2952                           intcon2	equ	0xFF1
  2953                           intcon3	equ	0xFF0
  2954                           postinc0	equ	0xFEE
  2955                           fsr0h	equ	0xFEA
  2956                           fsr0l	equ	0xFE9
  2957                           wreg	equ	0xFE8
  2958                           indf1	equ	0xFE7
  2959                           postinc1	equ	0xFE6
  2960                           postdec1	equ	0xFE5
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           bsr	equ	0xFE0
  2964                           indf2	equ	0xFDF
  2965                           postinc2	equ	0xFDE
  2966                           postdec2	equ	0xFDD
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _digitalToggle *****************
  2972 ;; Defined at:
  2973 ;;		line 89 in file "wiring_digital.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  pin             1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  pin             1   22[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0
  2988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2990 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2991 ;;Total ram usage:        2 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_SSerial_recv
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text14
  3001  0017CC                     __ptext14:
  3002                           	opt stack 0
  3003  0017CC                     _digitalToggle:
  3004                           	opt stack 23
  3005                           
  3006                           ;incstack = 0
  3007                           ;digitalToggle@pin stored from wreg
  3008  0017CC  6E41               	movwf	digitalToggle@pin,c
  3009                           
  3010                           ;wiring_digital.c: 91: *portOutputRegister[digitalPinToPort[pin]] ^= digitalPinToBitMask
      +                          [pin];
  3011  0017CE  5041               	movf	digitalToggle@pin,w,c
  3012  0017D0  0D01               	mullw	1
  3013  0017D2  0E3D               	movlw	low _digitalPinToBitMask
  3014  0017D4  24F3               	addwf	prodl,w,c
  3015  0017D6  6EF6               	movwf	tblptrl,c
  3016  0017D8  0E12               	movlw	high _digitalPinToBitMask
  3017  0017DA  20F4               	addwfc	prodh,w,c
  3018  0017DC  6EF7               	movwf	tblptrh,c
  3019  0017DE                     	if	0	;There are less than 3 active tblptr bytes
  3020  0017DE                     	endif
  3021  0017DE  0008               	tblrd		*
  3022  0017E0  CFF5 F040          	movff	tablat,??_digitalToggle
  3023  0017E4  5041               	movf	digitalToggle@pin,w,c
  3024  0017E6  0D01               	mullw	1
  3025  0017E8  0E58               	movlw	low _digitalPinToPort
  3026  0017EA  24F3               	addwf	prodl,w,c
  3027  0017EC  6EF6               	movwf	tblptrl,c
  3028  0017EE  0E12               	movlw	high _digitalPinToPort
  3029  0017F0  20F4               	addwfc	prodh,w,c
  3030  0017F2  6EF7               	movwf	tblptrh,c
  3031  0017F4                     	if	0	;There are less than 3 active tblptr bytes
  3032  0017F4                     	endif
  3033  0017F4  0008               	tblrd		*
  3034  0017F6  50F5               	movf	tablat,w,c
  3035  0017F8  0D02               	mullw	2
  3036  0017FA  0EA6               	movlw	low _portOutputRegister
  3037  0017FC  24F3               	addwf	prodl,w,c
  3038  0017FE  6EF6               	movwf	tblptrl,c
  3039  001800  0E12               	movlw	high _portOutputRegister
  3040  001802  20F4               	addwfc	prodh,w,c
  3041  001804  6EF7               	movwf	tblptrh,c
  3042  001806                     	if	0	;There are less than 3 active tblptr bytes
  3043  001806                     	endif
  3044  001806  0009               	tblrd		*+
  3045  001808  CFF5 FFD9          	movff	tablat,fsr2l
  3046  00180C  0009               	tblrd		*+
  3047  00180E  CFF5 FFDA          	movff	tablat,fsr2h
  3048  001812  5040               	movf	??_digitalToggle,w,c
  3049  001814  1ADF               	xorwf	indf2,f,c
  3050  001816  0012               	return	
  3051  001818                     __end_of_digitalToggle:
  3052                           	opt stack 0
  3053                           pclatu	equ	0xFFB
  3054                           pclath	equ	0xFFA
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           intcon3	equ	0xFF0
  3064                           postinc0	equ	0xFEE
  3065                           fsr0h	equ	0xFEA
  3066                           fsr0l	equ	0xFE9
  3067                           wreg	equ	0xFE8
  3068                           indf1	equ	0xFE7
  3069                           postinc1	equ	0xFE6
  3070                           postdec1	equ	0xFE5
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           bsr	equ	0xFE0
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           postdec2	equ	0xFDD
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _SSerial_rx_pin_read *****************
  3082 ;; Defined at:
  3083 ;;		line 95 in file "SoftwareSerial.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      unsigned char 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_SSerial_recv
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text15
  3111  001908                     __ptext15:
  3112                           	opt stack 0
  3113  001908                     _SSerial_rx_pin_read:
  3114                           	opt stack 23
  3115                           
  3116                           ;SoftwareSerial.c: 97: return *_receivePortRegister & _receiveBitMask;
  3117                           
  3118                           ;incstack = 0
  3119  001908  C082  FFD9         	movff	__receivePortRegister,fsr2l
  3120  00190C  C083  FFDA         	movff	__receivePortRegister+1,fsr2h
  3121  001910  50DF               	movf	indf2,w,c
  3122  001912  1423               	andwf	__receiveBitMask,w,c
  3123  001914  0012               	return	
  3124  001916                     __end_of_SSerial_rx_pin_read:
  3125                           	opt stack 0
  3126                           pclatu	equ	0xFFB
  3127                           pclath	equ	0xFFA
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           intcon2	equ	0xFF1
  3136                           intcon3	equ	0xFF0
  3137                           postinc0	equ	0xFEE
  3138                           fsr0h	equ	0xFEA
  3139                           fsr0l	equ	0xFE9
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           postinc1	equ	0xFE6
  3143                           postdec1	equ	0xFE5
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           bsr	equ	0xFE0
  3147                           indf2	equ	0xFDF
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           pclatu	equ	0xFFB
  3154                           pclath	equ	0xFFA
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           prodh	equ	0xFF4
  3160                           prodl	equ	0xFF3
  3161                           intcon	equ	0xFF2
  3162                           intcon2	equ	0xFF1
  3163                           intcon3	equ	0xFF0
  3164                           postinc0	equ	0xFEE
  3165                           fsr0h	equ	0xFEA
  3166                           fsr0l	equ	0xFE9
  3167                           wreg	equ	0xFE8
  3168                           indf1	equ	0xFE7
  3169                           postinc1	equ	0xFE6
  3170                           postdec1	equ	0xFE5
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           bsr	equ	0xFE0
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181                           	psect	rparam
  3182  0000                     pclatu	equ	0xFFB
  3183                           pclath	equ	0xFFA
  3184                           tblptru	equ	0xFF8
  3185                           tblptrh	equ	0xFF7
  3186                           tblptrl	equ	0xFF6
  3187                           tablat	equ	0xFF5
  3188                           prodh	equ	0xFF4
  3189                           prodl	equ	0xFF3
  3190                           intcon	equ	0xFF2
  3191                           intcon2	equ	0xFF1
  3192                           intcon3	equ	0xFF0
  3193                           postinc0	equ	0xFEE
  3194                           fsr0h	equ	0xFEA
  3195                           fsr0l	equ	0xFE9
  3196                           wreg	equ	0xFE8
  3197                           indf1	equ	0xFE7
  3198                           postinc1	equ	0xFE6
  3199                           postdec1	equ	0xFE5
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           bsr	equ	0xFE0
  3203                           indf2	equ	0xFDF
  3204                           postinc2	equ	0xFDE
  3205                           postdec2	equ	0xFDD
  3206                           fsr2h	equ	0xFDA
  3207                           fsr2l	equ	0xFD9
  3208                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    186
    Data        10
    BSS         294
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      73
    BANK0           160     25     153
    BANK1           256     10     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    _receivePortRegister	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTE(ABS[1]), PORTD(ABS[1]), PORTC(ABS[1]), PORTB(ABS[1]), 
		 -> PORTA(ABS[1]), NULL(NULL[0]), 

    _transmitPortRegister	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(ABS[1]), LATD(ABS[1]), LATC(ABS[1]), LATB(ABS[1]), 
		 -> LATA(ABS[1]), NULL(NULL[0]), 

    digitalWrite@out	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(ABS[1]), LATD(ABS[1]), LATC(ABS[1]), LATB(ABS[1]), 
		 -> LATA(ABS[1]), NULL(NULL[0]), 

    pinMode@reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISE(ABS[1]), TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), 
		 -> TRISA(ABS[1]), NULL(NULL[0]), 

    timer1_pin_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(ABS[1]), LATD(ABS[1]), LATC(ABS[1]), LATB(ABS[1]), 
		 -> LATA(ABS[1]), NULL(NULL[0]), 

    intFunc	volatile PTR FTN()void [3] size(2) Largest target is 0
		 -> Absolute function(), 

    _tx_buffer	PTR volatile struct . size(2) Largest target is 68
		 -> tx_buffer(BANK0[68]), NULL(NULL[0]), 

    _rx_buffer	PTR volatile struct . size(2) Largest target is 68
		 -> rx_buffer(BANK1[68]), NULL(NULL[0]), 

    store_char@buffer	PTR volatile struct . size(2) Largest target is 68
		 -> rx_buffer(BANK1[68]), 

    portOutputRegister	const PTR volatile unsigned char [6] size(2) Largest target is 1
		 -> LATE(ABS[1]), LATD(ABS[1]), LATC(ABS[1]), LATB(ABS[1]), 
		 -> LATA(ABS[1]), NULL(NULL[0]), 

    portInputRegister	const PTR volatile unsigned char [6] size(2) Largest target is 1
		 -> PORTE(ABS[1]), PORTD(ABS[1]), PORTC(ABS[1]), PORTB(ABS[1]), 
		 -> PORTA(ABS[1]), NULL(NULL[0]), 

    portModeRegister	const PTR volatile unsigned char [6] size(2) Largest target is 1
		 -> TRISE(ABS[1]), TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), 
		 -> TRISA(ABS[1]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_store_char
    _SSerial_recv->_digitalToggle
    _SSerial_recv->_tunedDelay

Critical Paths under _low_isr in COMRAM

    _low_isr->_disableTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->_SSerial_recv

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_pinMode
    _loop->_digitalWrite
    _digitalWrite->_turnOffPWM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7458
                               _init
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2512
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              9     8      1    2512
                                              0 BANK1      9     8      1
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    4946
                              _delay
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         9     8      1    3606
                                              1 BANK1      9     8      1
                         _turnOffPWM
 ---------------------------------------------------------------------------------
 (3) _turnOffPWM                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     1      4    1340
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             20    20      0      45
                                              1 COMRAM    20    20      0
                       _disableTimer
 ---------------------------------------------------------------------------------
 (5) _disableTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            20    20      0    1429
                                              5 BANK0     20    20      0
                       _SSerial_recv
                         _store_char
 ---------------------------------------------------------------------------------
 (7) _store_char                                           7     5      2     328
                                             21 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _SSerial_recv                                         7     7      0     956
                                             23 COMRAM     2     2      0
                                              0 BANK0      5     5      0
                _SSerial_rx_pin_read
                      _digitalToggle
                         _tunedDelay
 ---------------------------------------------------------------------------------
 (8) _tunedDelay                                           2     0      2     650
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _digitalToggle                                        2     2      0      62
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _SSerial_rx_pin_read                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _loop
     _delay
     _digitalWrite
       _turnOffPWM
   _setup
     _pinMode

 _low_isr (ROOT)
   _disableTimer

 _high_isr (ROOT)
   _SSerial_recv
     _SSerial_rx_pin_read
     _digitalToggle
     _tunedDelay
   _store_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      8E       7       55.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     1C      49       1       76.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     170      20        0.0%
DATA                 0      0     170       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Feb 16 12:09:14 2015

           _analogPinToChannel 12B2                             _GO 007E11                             _HW 0017  
                           bsr 000FE0                 ??_SSerial_recv 0042                            l803 15C8  
                          l628 1862                            l790 1692                            l796 18A2  
                          l798 18AC                            l799 18C6                            _GIE 007F97  
                          _PR2 000FCB                            _TX9 007D66                            _ocr 0015  
                          wreg 000FE8                           l7127 160A                           l7153 154C  
                         l7139 165E                           l7157 155C                           l7095 18B6  
                         l7167 15AA                           l7169 15B8                           _ADON 007E10  
                         l7789 18F4                           STR_1 12BB                           _BRGH 007D62  
                         _CREN 007D5C                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           _LATD 000F8C                           _LATE 000F8D  
                         _IPEN 007E87                           _PEIE 007F96                           u5325 1654  
                         u5326 165C                           u5335 168A                           u5336 1692  
                         _RCIE 007CED                           _RCIF 007CF5                           u5375 15C0  
                         u5376 15C8                           _RCIP 007CFD                           i2l98 1710  
                         _RBPU 007F8F                           u6977 186A                           _TMR1 000FCE  
                         _SPEN 007D5F                           _TRMT 007D61                           _TXIE 007CEC  
                         _TXIF 007CF4                           _TXEN 007D65                           _SYNC 007D64  
                         _TXIP 007CFC                   _transmitting 0248                           _TxRx 001A  
        ??_SSerial_rx_pin_read 0040                           _main 18EC                           _init 1818  
                         _loop 177A                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                  pinMode@oldGIE 0186                           prodh 000FF4  
                         prodl 000FF3                           start 1172       __end_of_digitalPinToPort 1273  
                        ?_main 002B                          ?_init 002B                          ?_loop 002B  
                        _BRG16 007DC3                          _T0CON 000FD5                          _T1CON 000FCD  
                        _T2CON 000FCA                          i1l530 18CC                          i1l532 18DA  
                        i1l383 112C                          i2l373 13AA                          i2l365 1392  
                        i2l367 139A                          _RCREG 000FAE             _portOutputRegister 12A6  
                        _TMR0L 000FD6                          _SPBRG 000FAF                          _PORTA 000F80  
                        _PORTB 000F81                          _PORTC 000F82                          _PORTD 000F83  
                        _PORTE 000F84                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                        _TXREG 000FAD               _portModeRegister 129A                _timer1_pin_mask 002A  
              _timer1_pin_port 008C                          __mode 0021                          _delay 1862  
                        _table 1201                          _randf 0028                          _randx 0076  
              __end_of_pinMode 1694                          _setup 18FA                 __pbitbssCOMRAM 0248  
              __end_of_low_isr 1172                          tablat 000FF5          _XMIT_START_ADJUSTMENT 12B8  
           lcd_setCursor@F5717 00F1                          status 000FD8           __end_of_digitalWrite 15CA  
              __initialization 1712                   __end_of_main 18FA                   __end_of_init 1862  
                 __end_of_loop 17CC    __end_of_digitalPinToBitMask 1258                         ??_main 018E  
                       ??_init 0184                         ??_loop 018E                  __activetblptr 000002  
         __end_of_disableTimer 18DC                         ?_delay 0184                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         _ADCON2 000FC0                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _CCPR1L 000FBE                         _CCPR2L 000FBB  
                       ?_setup 002B                         _INT0IE 007F94                         _INT0IF 007F91  
                       _INT1IE 007F83                         _INT1IF 007F80                         _INT2IE 007F84  
                       _INT2IF 007F81                         _INT1IP 007F86                         _INT2IP 007F87  
                 __displaymode 001F                         i2l1330 146C                         i2l1317 18DC  
                       i2l1335 14F0                         i1l5271 18D2                         i1l5983 10B2  
                       i1l5995 10F4                         i1l5987 10CA                         i2l7305 1434  
                       i2l7315 1464                         i2l7333 14E4                         i2l7317 1472  
                       i2l7327 1496                         i2l7295 1400                         i2l7753 1344  
                       i2l7765 138A                         i2l7757 136C                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR1IE 007CE8                         _TMR1IF 007CF0  
                       _TMR0IP 007F8A                         _TMR1IP 007CF8                         _SPBRGH 000FB0  
                       _TMR1ON 007E68           __end_of_SSerial_recv 14F2                         _TRISA4 007C94  
                       _TRISC6 007CA6                         _TRISC7 007CA7          __transmitPortRegister 008A  
             __end_of_high_isr 13E4                         clear_0 1718                         clear_1 1724  
                       clear_2 1732                 __inverse_logic 0009                   __pdataCOMRAM 0047  
                    ??_pinMode 0185                   __mediumconst 0000                      ??_low_isr 002C  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                   __accesstop 0060        __end_of__initialization 1770                    pinMode@_bit 018B  
        __end_of_digitalToggle 1818                    pinMode@mode 0184               __transmitBitMask 0026  
                  pinMode@port 018C                     __data_pins 0060                 __pcstackCOMRAM 002B  
                 __pidataBANK0 1916                  __end_of_delay 189C                  __end_of_table 123D  
                __end_of_setup 1908                        ??_delay 0188                        ??_setup 018D  
              __receiveBitMask 0023                     __pbssBANK0 0060                     __pbssBANK1 0100  
           __rx_delay_intrabit 0086          __size_of_digitalWrite 00D8              _portInputRegister 128E  
     __end_of_portModeRegister 12A6                __receive_buffer 0100          __size_of_disableTimer 0014  
                   __rx_buffer 000F                        _INTEDG0 007F8E                        _INTEDG1 007F8D  
                      _INTEDG2 007F8C               store_char@buffer 0040                        _INTFlag 0018  
                   __tx_buffer 0011                   _digitalWrite 14F2    __end_of_SSerial_rx_pin_read 1916  
              turnOffPWM@timer 0184          __size_of_SSerial_recv 010E                      ?_high_isr 002B  
           disableTimer@_timer 002B      __end_of_portInputRegister 129A                        __Hparam 0000  
                      __Lparam 0000                   _disableTimer 18C8                   __psmallconst 1200  
                      __pcinit 1712                        __ramtop 0800                        __ptext0 18EC  
                      __ptext1 18FA                        __ptext2 15CA                        __ptext3 177A  
                      __ptext4 14F2                        __ptext5 189C                        __ptext6 1862  
                      __ptext7 1818                        __rs_pin 0025                        __ptext9 18C8  
                 _SSerial_recv 13E4              _SSerial_recv$1296 00D9                        _intFunc 0068  
                      _pinMode 15CA                        delay@ms 0184                        _ps_data 00D2  
                      _low_isr 1018                __displaycontrol 001D                     ??_high_isr 00DD  
               __pintcode_body 12C0           end_of_initialization 1770                   __startMillis 006E  
                __Lmediumconst 0000                        int_func 12C0                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                      __G15_CTRL 001C                    _CCP1CONbits 000FBD  
                  _CCP2CONbits 000FBA                     _tunedDelay 18DC                tunedDelay@delay 0040  
                   _store_char 1694                     _turnOffPWM 189C                  __pidataCOMRAM 191E  
          start_initialization 1712                    __enable_pin 0020           __receivePortRegister 0082  
          __rx_delay_centering 0084               SSerial_recv@noti 00D8                    __pdataBANK0 00F1  
                  __pbssCOMRAM 0001                  __pcstackBANK0 00D8                  __pcstackBANK1 0184  
                   pinMode@reg 0189                     pinMode@pin 0188            __end_of__stringdata 12BF  
       __size_of_digitalToggle 004C                    __receivePin 0024              __size_of_high_isr 03DC  
                  ?_tunedDelay 0040                    ?_store_char 0040                    ?_turnOffPWM 002B  
                    __pintcode 1008              __rx_delay_stopbit 0088               __buffer_overflow 0080  
                    __numlines 0022                    __pintcodelo 1018                      __tx_delay 0013  
            _digitalPinToTimer 1273                    __smallconst 1200                       ?_pinMode 0184  
                  store_char@c 0044                    store_char@i 0045                       ?_low_isr 002B  
               __size_of_delay 003A                 __size_of_setup 000E     __end_of_analogPinToChannel 12B8  
 __size_of_SSerial_rx_pin_read 000E            _digitalPinToBitMask 123D                       i1u420_25 109C  
                     i2u557_45 14B4                  _digitalToggle 17CC      __end_of_digitalPinToTimer 128E  
                    _rx_buffer 0140                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                  __stringdata 12BB                      _tone_pins 0048                      high_isr@c 00EB  
                    high_isr@f 00F0                      high_isr@m 00EC                      _tx_buffer 008E  
          __size_of_tunedDelay 0010          _timer0_overflow_count 007A              SC08A_getPos@F5645 007E  
          __size_of_store_char 007E                  _timer0_millis 0001  __end_of_XMIT_START_ADJUSTMENT 12BA  
          __size_of_turnOffPWM 002C                      copy_data0 174C                       __Hrparam 0000  
               ?_digitalToggle 002B     __end_of_portOutputRegister 12B2                       __Lrparam 0000  
           digitalWrite@oldGIE 0187               __size_of_pinMode 00CA               __size_of_low_isr 015A  
                     __ptext11 1694                       __ptext12 13E4                       __ptext13 18DC  
                     __ptext14 17CC                       __ptext15 1908                       __timeout 0072  
          _timer1_toggle_count 0005                       _high_isr 1008               _digitalPinToPort 1258  
                __size_of_main 000E                  __size_of_init 004A                  __size_of_loop 0052  
                     _position 0047               __displayfunction 001E           __receive_buffer_head 000B  
         __receive_buffer_tail 000D                   _timer0_fract 0029                     _INTCONbits 000FF2  
                ?_digitalWrite 0185               digitalToggle@pin 0041                       intlevel1 0000  
                     intlevel2 0000              digitalWrite@timer 018A                   ??_tunedDelay 0042  
              ??_digitalToggle 0040                       low_isr@c 003F               _analog_reference 0027  
                   _SERIAL_ERR 0019                   ??_store_char 0042              pinMode@oldGIE_867 0187  
                 ??_turnOffPWM 0184                  ?_disableTimer 002B                 _tonePinToTimer 12BA  
                SSerial_recv@d 00DB                  SSerial_recv@i 00DC                  ?_SSerial_recv 002B  
          _SSerial_rx_pin_read 1908               digitalWrite@_bit 018B               digitalWrite@port 018C  
               ??_digitalWrite 0186             __end_of_tunedDelay 18EC             __end_of_store_char 1712  
           __end_of_turnOffPWM 18C8                digitalWrite@pin 018D                digitalWrite@val 0185  
              digitalWrite@out 0188           ?_SSerial_rx_pin_read 002B                     __AX12_CTRL 001B  
       __end_of_tonePinToTimer 12BB                 ??_disableTimer 002B  
